[{
    "collection": {
        "event": [],
        "name": "Feature Flip",
        "info": {
            "id": "4e02f105-f5a8-fc61-b338-9541c294e88e",
            "name": "Feature Flip",
            "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
        },
        "item": [
            {
                "_": {
                    "postman_id": "fdaed0b9-efb2-f94e-08ff-65187dd91e0a"
                },
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "exec": [
                                "try {",
                                "    var data = JSON.parse(responseBody);",
                                "} catch(e){",
                                "    console.log(e);",
                                "}",
                                "",
                                "postman.setEnvironmentVariable(\"admin_session_token\", data.session_token);",
                                "",
                                "var schema = {",
                                "  \"type\": \"object\",",
                                "  \"properties\": {",
                                "    \"id\": { \"type\": \"integer\" },",
                                "    \"type\": {",
                                "        \"type\": \"string\",",
                                "        \"enum\": [\"Admin\"]",
                                "    },",
                                "    \"email\": {",
                                "        \"type\": \"string\"",
                                "    },",
                                "    \"session_token\": {",
                                "        \"type\": \"string\",",
                                "        \"minLength\": 32",
                                "    },",
                                "    \"venue_ids\": { \"type\": \"array\" },",
                                "    \"super_admin\": { \"type\": \"boolean\" }",
                                "  },",
                                "  \"required\": [",
                                "      \"id\", \"type\", \"email\",",
                                "      \"session_token\", \"venue_ids\",",
                                "      \"super_admin\"",
                                "  ]",
                                "};",
                                "",
                                "validated = tv4.validateResult(data, schema);",
                                "schemaString = \"Valid Response Schema\";",
                                "if(validated.valid === false) {",
                                "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                "}",
                                "",
                                "// Tests",
                                "tests[schemaString] = validated.valid;",
                                "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                "tests[\"has valid session token\"] = responseBody.has(data.session_token);",
                                "tests[\"Body matches string\"] = responseBody.has(\"Admin\");",
                                "",
                                "",
                                "",
                                ""
                            ],
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "fdaed0b9-efb2-f94e-08ff-65187dd91e0a",
                "name": "Get Auth",
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Accept",
                            "value": "application/json, text/javascript, */*; q=0.01"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic {{admin_authorization}}"
                        }
                    ],
                    "method": "POST",
                    "url": "{{auth_host}}/auth.json"
                },
                "response": []
            },
            {
                "_": {
                    "postman_id": "715252dc-bfeb-a31e-8351-e76787b27023"
                },
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "exec": [
                                "try {",
                                "    var data = JSON.parse(responseBody);",
                                "} catch(e){",
                                "    data = [];",
                                "    console.log(e);",
                                "}",
                                "",
                                "var schema = {",
                                "  \"type\": \"array\"",
                                "};",
                                "",
                                "validated = tv4.validateResult(data, schema);",
                                "schemaString = \"Valid Response Schema\";",
                                "if(validated.valid === false) {",
                                "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                "}",
                                "",
                                "var randNum = Math.floor(Math.random() * data.length);",
                                "var rand = data[randNum];",
                                "postman.setEnvironmentVariable(\"featureToFlip\", rand);",
                                "",
                                "// Tests",
                                "tests[schemaString] = validated.valid;",
                                "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                            ],
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "715252dc-bfeb-a31e-8351-e76787b27023",
                "name": "GetFeatureToFlip",
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "{{admin_session_token}}"
                        }
                    ],
                    "method": "GET",
                    "url": "{{flippy_host}}/features/?scope=venue-{{venue_id}}"
                },
                "response": []
            },
            {
                "_": {
                    "postman_id": "8156338c-1a26-133a-b7d7-16fd30172808"
                },
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "exec": [
                                "try {",
                                "    var data = JSON.parse(responseBody);",
                                "} catch(e){",
                                "    data = {}",
                                "    console.error(e);",
                                "}",
                                "",
                                "var schema = {",
                                "  \"type\": \"object\",",
                                "  \"properties\": {",
                                "      \"data\": { \"type\": \"boolean\" }",
                                "  },",
                                "  \"required\": [ \"data\" ]",
                                "};",
                                "",
                                "validated = tv4.validateResult(data, schema);",
                                "schemaString = \"Valid Response Schema\";",
                                "if(validated.valid === false) {",
                                "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                "}",
                                "",
                                "// Tests",
                                "tests[schemaString] = validated.valid;",
                                "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                            ],
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "8156338c-1a26-133a-b7d7-16fd30172808",
                "name": "FlipFeatureOff",
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"scope\":\"venue-{{venue_id}}\",\n    \"value\":0\n}"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "{{admin_session_token}}"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "method": "PUT",
                    "url": "{{flippy_host}}/features/{{featureToFlip}}"
                },
                "response": []
            },
            {
                "_": {
                    "postman_id": "08aaa5a2-db60-1f91-72e8-555ff9a4beda"
                },
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "exec": [
                                "try {",
                                "    var data = JSON.parse(responseBody);",
                                "} catch(e){",
                                "    data = {};",
                                "    console.log(e);",
                                "}",
                                "",
                                "var schema = {",
                                "  \"type\": \"array\"",
                                "};",
                                "",
                                "validated = tv4.validateResult(data, schema);",
                                "schemaString = \"Valid Response Schema\";",
                                "if(validated.valid === false) {",
                                "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                "}",
                                "",
                                "var isFound = false;",
                                "",
                                "data.forEach(function(flips){",
                                "   if(flips.name === environment.featureToFlip) {",
                                "       isFound = true;",
                                "   }",
                                "});",
                                "",
                                "// Tests",
                                "tests[schemaString] = validated.valid;",
                                "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                "tests[\"feature should not be found\"] = isFound === false;",
                                ""
                            ],
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "08aaa5a2-db60-1f91-72e8-555ff9a4beda",
                "name": "VerifyFeatureIsOff",
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "{{admin_session_token}}"
                        }
                    ],
                    "method": "GET",
                    "url": "{{flippy_host}}/features/?scope=venue-{{venue_id}}"
                },
                "response": []
            },
            {
                "_": {
                    "postman_id": "39913290-e563-5c9b-1664-0c4c94b14a69"
                },
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "exec": [
                                "try {",
                                "    var data = JSON.parse(responseBody);",
                                "} catch(e){",
                                "    data = {};",
                                "    console.log(e);",
                                "}",
                                "",
                                "var schema = {",
                                "  \"type\": \"object\",",
                                "  \"properties\": {",
                                "      \"data\": {",
                                "        \"type\": \"boolean\"",
                                "      }",
                                "  }",
                                "};",
                                "",
                                "validated = tv4.validateResult(data, schema);",
                                "schemaString = \"Valid Response Schema\";",
                                "if(validated.valid === false) {",
                                "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                "}",
                                "",
                                "// tests:",
                                "tests[schemaString] = validated.valid;",
                                "tests[\"data is true\"] = data.data === true;",
                                "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                            ],
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "39913290-e563-5c9b-1664-0c4c94b14a69",
                "name": "FlipFeatureOn",
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"scope\":\"venue-{{venue_id}}\",\n    \"value\":1\n}"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "{{admin_session_token}}"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "method": "PUT",
                    "url": "{{flippy_host}}/features/{{featureToFlip}}"
                },
                "response": []
            },
            {
                "_": {
                    "postman_id": "b43f738a-786e-9051-3479-2f5a4aee04f8"
                },
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "exec": [
                                "try {",
                                "    var data = JSON.parse(responseBody);",
                                "} catch(e){",
                                "    console.log(e);",
                                "}",
                                "",
                                "var schema = {",
                                "  \"type\": \"array\"",
                                "};",
                                "",
                                "validated = tv4.validateResult(data, schema);",
                                "schemaString = \"Valid Response Schema\";",
                                "if(validated.valid === false) {",
                                "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                "}",
                                "",
                                "var isFound = false;",
                                "",
                                "data.forEach(function(flips){",
                                "   if(flips === environment.featureToFlip) {",
                                "       isFound = true;",
                                "   }",
                                "});",
                                "",
                                "// Tests",
                                "tests[schemaString] = validated.valid;",
                                "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                "tests[\"feature should be found\"] = isFound === true;",
                                ""
                            ],
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "b43f738a-786e-9051-3479-2f5a4aee04f8",
                "name": "VerifyFeatureIsOn",
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "{{admin_session_token}}"
                        }
                    ],
                    "method": "GET",
                    "url": "{{flippy_host}}/features/?scope=venue-{{venue_id}}"
                },
                "response": []
            }
        ],
        "variable": []
    },
    "environment": {
        "id": "69e172ac-3b8f-0256-4a7c-ee2f7decc022",
        "name": "Production",
        "values": [
            {
                "key": "api_host",
                "name": "api_host",
                "type": "any",
                "value": "https://api.bypassmobile.com"
            },
            {
                "key": "auth_host",
                "name": "auth_host",
                "type": "any",
                "value": "https://auth.bypassmobile.com"
            },
            {
                "key": "sv_gateway_host",
                "name": "sv_gateway_host",
                "type": "any",
                "value": "https://stored-value.bypassmobile.com"
            },
            {
                "key": "flippy_host",
                "name": "flippy_host",
                "type": "any",
                "value": "https://feature-flip.bypassmobile.com"
            },
            {
                "key": "licensing_host",
                "type": "any",
                "value": "https://api-licensing.bypassmobile.com"
            },
            {
                "key": "standsheets_host",
                "type": "any",
                "value": "https://standsheets.bypassmobile.com"
            },
            {
                "key": "super_admin_authorization",
                "type": "any",
                "value": "MXN1cGVyYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
            },
            {
                "key": "admin_venue_id",
                "type": "any",
                "value": "86"
            },
            {
                "key": "admin_session_token",
                "type": "any",
                "value": "9653c840f7ffed3b99d7c7bfa527338a"
            },
            {
                "key": "session_token",
                "type": "any",
                "value": "f85b2b9e073ba196aeef7b7d7037ecb2"
            },
            {
                "key": "venue_id",
                "type": "any",
                "value": "86"
            },
            {
                "key": "admin_authorization",
                "type": "any",
                "value": "MWJwYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
            },
            {
                "key": "parametric_session",
                "type": "any",
                "value": "Q00wMDAwMDAwMDA2Mjc5NmFkOjk5OTk3ODBmZGIxZmE4ZDE3YTczMWZkYzgxODY1OTM4"
            },
            {
                "key": "parametric_session_token",
                "type": "any",
                "value": "0517b62a16efeeef715e75c9c3e48e04"
            },
            {
                "key": "kaiser_host",
                "type": "any",
                "value": "https://kaiser.bypassmobile.com"
            },
            {
                "key": "ot_default_location_id",
                "type": "any",
                "value": "792"
            },
            {
                "key": "Testable Collections",
                "type": "any",
                "value": "Auth Server,Feature Flip"
            },
            {
                "key": "BELOW IS GENERATED",
                "type": "any",
                "value": "MOVE STATIC STUFF ABOVE"
            },
            {
                "key": "-----------------------",
                "type": "any",
                "value": "-------------------------------"
            },
            {
                "key": "role_id",
                "type": "any",
                "value": "231"
            },
            {
                "key": "admin_id",
                "type": "any",
                "value": "2034"
            },
            {
                "key": "admin_role_id",
                "type": "any",
                "value": "627"
            },
            {
                "key": "order_taker_id",
                "type": "any",
                "value": "29449"
            },
            {
                "key": "encoded_pos_keycode",
                "type": "any",
                "value": "NTU2Nw=="
            },
            {
                "key": "featureToFlip",
                "type": "any",
                "value": "admin-next"
            },
            {
                "key": "account_id",
                "type": "any",
                "value": "119"
            },
            {
                "key": "device_jwt",
                "type": "any",
                "value": "null"
            }
        ]
    },
    "globals": {
        "id": "6c69a4fb-95be-41a6-9e51-f320460736db",
        "values": []
    },
    "run": {
        "error": null,
        "executions": [
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    },
                    {
                        "assertion": "has valid session token"
                    },
                    {
                        "assertion": "Body matches string"
                    }
                ],
                "cursor": {
                    "bof": true,
                    "cr": false,
                    "cycles": 1,
                    "empty": false,
                    "eof": false,
                    "iteration": 0,
                    "length": 6,
                    "position": 0,
                    "ref": "f92ce76b-7ac5-42f5-ac5c-05ea8aabda70"
                },
                "id": "fdaed0b9-efb2-f94e-08ff-65187dd91e0a",
                "item": {
                    "_": {
                        "postman_id": "fdaed0b9-efb2-f94e-08ff-65187dd91e0a"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var data = JSON.parse(responseBody);",
                                    "} catch(e){",
                                    "    console.log(e);",
                                    "}",
                                    "",
                                    "postman.setEnvironmentVariable(\"admin_session_token\", data.session_token);",
                                    "",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"Admin\"]",
                                    "    },",
                                    "    \"email\": {",
                                    "        \"type\": \"string\"",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" },",
                                    "    \"super_admin\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"email\",",
                                    "      \"session_token\", \"venue_ids\",",
                                    "      \"super_admin\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(data, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "tests[\"has valid session token\"] = responseBody.has(data.session_token);",
                                    "tests[\"Body matches string\"] = responseBody.has(\"Admin\");",
                                    "",
                                    "",
                                    "",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "fdaed0b9-efb2-f94e-08ff-65187dd91e0a",
                    "name": "Get Auth",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Accept",
                                "value": "application/json, text/javascript, */*; q=0.01"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{admin_authorization}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Accept",
                            "value": "application/json, text/javascript, */*; q=0.01"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic MWJwYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":2035,\"type\":\"Admin\",\"session_token\":\"9653c840f7ffed3b99d7c7bfa527338a\",\"email\":\"1bpadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":false,\"venue_ids\":[86]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:18 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "182"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 182,
                    "responseTime": 775,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 6,
                    "position": 1,
                    "ref": "347c8c73-090d-49c0-bf02-05321472c2bc"
                },
                "id": "715252dc-bfeb-a31e-8351-e76787b27023",
                "item": {
                    "_": {
                        "postman_id": "715252dc-bfeb-a31e-8351-e76787b27023"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var data = JSON.parse(responseBody);",
                                    "} catch(e){",
                                    "    data = [];",
                                    "    console.log(e);",
                                    "}",
                                    "",
                                    "var schema = {",
                                    "  \"type\": \"array\"",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(data, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "var randNum = Math.floor(Math.random() * data.length);",
                                    "var rand = data[randNum];",
                                    "postman.setEnvironmentVariable(\"featureToFlip\", rand);",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "715252dc-bfeb-a31e-8351-e76787b27023",
                    "name": "GetFeatureToFlip",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{flippy_host}}/features/?scope=venue-{{venue_id}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "9653c840f7ffed3b99d7c7bfa527338a"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "feature-flip.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://feature-flip.bypassmobile.com/features/?scope=venue-86"
                },
                "response": {
                    "body": "[\"labor\",\"printer-service\",\"weight-scale\",\"{{featureToFlip}}\",\"suites_v2\",\"menu-push-updates\",\"manual-pre-orders\",\"payments_first\",\"loyalty_account\",\"concurrent-events\",\"close_out_report\",\"event-template-menus\",\"report_uploads\",\"standsheets-service\",\"admin-next\",\"card-on-file\"]",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "OPTIONS,GET,POST,PUT"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": "*"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:19 GMT"
                        },
                        {
                            "key": "Server",
                            "value": "nginx/1.8.0 + Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Status",
                            "value": "200 OK"
                        },
                        {
                            "key": "X-Content-Type-Options",
                            "value": "nosniff"
                        },
                        {
                            "key": "X-Powered-By",
                            "value": "Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Content-Length",
                            "value": "278"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 278,
                    "responseTime": 298,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 6,
                    "position": 2,
                    "ref": "8830526b-57e5-4484-8db5-3e656e8ef8c0"
                },
                "id": "8156338c-1a26-133a-b7d7-16fd30172808",
                "item": {
                    "_": {
                        "postman_id": "8156338c-1a26-133a-b7d7-16fd30172808"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var data = JSON.parse(responseBody);",
                                    "} catch(e){",
                                    "    data = {}",
                                    "    console.error(e);",
                                    "}",
                                    "",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "      \"data\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [ \"data\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(data, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "8156338c-1a26-133a-b7d7-16fd30172808",
                    "name": "FlipFeatureOff",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"scope\":\"venue-{{venue_id}}\",\n    \"value\":0\n}"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "url": "{{flippy_host}}/features/{{featureToFlip}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"scope\":\"venue-86\",\n    \"value\":0\n}"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "9653c840f7ffed3b99d7c7bfa527338a"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "feature-flip.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 41
                        }
                    ],
                    "method": "PUT",
                    "url": "https://feature-flip.bypassmobile.com/features/admin-next"
                },
                "response": {
                    "body": "{\"data\":true}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "OPTIONS,GET,POST,PUT"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": "*"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Server",
                            "value": "nginx/1.8.0 + Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Status",
                            "value": "200 OK"
                        },
                        {
                            "key": "X-Content-Type-Options",
                            "value": "nosniff"
                        },
                        {
                            "key": "X-Powered-By",
                            "value": "Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Content-Length",
                            "value": "13"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 13,
                    "responseTime": 149,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    },
                    {
                        "assertion": "feature should not be found"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 6,
                    "position": 3,
                    "ref": "c981ffaf-53fa-4ad0-a3c8-294b2fdfeff7"
                },
                "id": "08aaa5a2-db60-1f91-72e8-555ff9a4beda",
                "item": {
                    "_": {
                        "postman_id": "08aaa5a2-db60-1f91-72e8-555ff9a4beda"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var data = JSON.parse(responseBody);",
                                    "} catch(e){",
                                    "    data = {};",
                                    "    console.log(e);",
                                    "}",
                                    "",
                                    "var schema = {",
                                    "  \"type\": \"array\"",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(data, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "var isFound = false;",
                                    "",
                                    "data.forEach(function(flips){",
                                    "   if(flips.name === environment.featureToFlip) {",
                                    "       isFound = true;",
                                    "   }",
                                    "});",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "tests[\"feature should not be found\"] = isFound === false;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "08aaa5a2-db60-1f91-72e8-555ff9a4beda",
                    "name": "VerifyFeatureIsOff",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{flippy_host}}/features/?scope=venue-{{venue_id}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "9653c840f7ffed3b99d7c7bfa527338a"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "feature-flip.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://feature-flip.bypassmobile.com/features/?scope=venue-86"
                },
                "response": {
                    "body": "[\"labor\",\"printer-service\",\"weight-scale\",\"{{featureToFlip}}\",\"suites_v2\",\"menu-push-updates\",\"manual-pre-orders\",\"payments_first\",\"loyalty_account\",\"concurrent-events\",\"close_out_report\",\"event-template-menus\",\"report_uploads\",\"standsheets-service\",\"card-on-file\"]",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "OPTIONS,GET,POST,PUT"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": "*"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Server",
                            "value": "nginx/1.8.0 + Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Status",
                            "value": "200 OK"
                        },
                        {
                            "key": "X-Content-Type-Options",
                            "value": "nosniff"
                        },
                        {
                            "key": "X-Powered-By",
                            "value": "Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Content-Length",
                            "value": "265"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 265,
                    "responseTime": 60,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "data is true"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 6,
                    "position": 4,
                    "ref": "bb601287-e47a-42c7-9b5f-054dde041e0b"
                },
                "id": "39913290-e563-5c9b-1664-0c4c94b14a69",
                "item": {
                    "_": {
                        "postman_id": "39913290-e563-5c9b-1664-0c4c94b14a69"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var data = JSON.parse(responseBody);",
                                    "} catch(e){",
                                    "    data = {};",
                                    "    console.log(e);",
                                    "}",
                                    "",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "      \"data\": {",
                                    "        \"type\": \"boolean\"",
                                    "      }",
                                    "  }",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(data, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// tests:",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"data is true\"] = data.data === true;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "39913290-e563-5c9b-1664-0c4c94b14a69",
                    "name": "FlipFeatureOn",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"scope\":\"venue-{{venue_id}}\",\n    \"value\":1\n}"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "PUT",
                        "url": "{{flippy_host}}/features/{{featureToFlip}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"scope\":\"venue-86\",\n    \"value\":1\n}"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "9653c840f7ffed3b99d7c7bfa527338a"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "feature-flip.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 41
                        }
                    ],
                    "method": "PUT",
                    "url": "https://feature-flip.bypassmobile.com/features/admin-next"
                },
                "response": {
                    "body": "{\"data\":true}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "OPTIONS,GET,POST,PUT"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": "*"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Server",
                            "value": "nginx/1.8.0 + Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Status",
                            "value": "200 OK"
                        },
                        {
                            "key": "X-Content-Type-Options",
                            "value": "nosniff"
                        },
                        {
                            "key": "X-Powered-By",
                            "value": "Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Content-Length",
                            "value": "13"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 13,
                    "responseTime": 99,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    },
                    {
                        "assertion": "feature should be found"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 6,
                    "position": 5,
                    "ref": "134cf46a-487e-4a0f-bf60-44f125581397"
                },
                "id": "b43f738a-786e-9051-3479-2f5a4aee04f8",
                "item": {
                    "_": {
                        "postman_id": "b43f738a-786e-9051-3479-2f5a4aee04f8"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var data = JSON.parse(responseBody);",
                                    "} catch(e){",
                                    "    console.log(e);",
                                    "}",
                                    "",
                                    "var schema = {",
                                    "  \"type\": \"array\"",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(data, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "var isFound = false;",
                                    "",
                                    "data.forEach(function(flips){",
                                    "   if(flips === environment.featureToFlip) {",
                                    "       isFound = true;",
                                    "   }",
                                    "});",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "tests[\"feature should be found\"] = isFound === true;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "b43f738a-786e-9051-3479-2f5a4aee04f8",
                    "name": "VerifyFeatureIsOn",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{flippy_host}}/features/?scope=venue-{{venue_id}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "9653c840f7ffed3b99d7c7bfa527338a"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "feature-flip.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://feature-flip.bypassmobile.com/features/?scope=venue-86"
                },
                "response": {
                    "body": "[\"labor\",\"printer-service\",\"weight-scale\",\"{{featureToFlip}}\",\"suites_v2\",\"menu-push-updates\",\"manual-pre-orders\",\"payments_first\",\"loyalty_account\",\"concurrent-events\",\"close_out_report\",\"event-template-menus\",\"report_uploads\",\"standsheets-service\",\"admin-next\",\"card-on-file\"]",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "OPTIONS,GET,POST,PUT"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": "*"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Server",
                            "value": "nginx/1.8.0 + Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Status",
                            "value": "200 OK"
                        },
                        {
                            "key": "X-Content-Type-Options",
                            "value": "nosniff"
                        },
                        {
                            "key": "X-Powered-By",
                            "value": "Phusion Passenger 5.0.15"
                        },
                        {
                            "key": "Content-Length",
                            "value": "278"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 278,
                    "responseTime": 49,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            }
        ],
        "failures": [],
        "stats": {
            "assertions": {
                "failed": 0,
                "pending": 0,
                "total": 17
            },
            "items": {
                "failed": 0,
                "pending": 0,
                "total": 6
            },
            "iterations": {
                "failed": 0,
                "pending": 0,
                "total": 1
            },
            "prerequestScripts": {
                "failed": 0,
                "pending": 0,
                "total": 0
            },
            "prerequests": {
                "failed": 0,
                "pending": 0,
                "total": 6
            },
            "requests": {
                "failed": 0,
                "pending": 0,
                "total": 6
            },
            "scripts": {
                "failed": 0,
                "pending": 0,
                "total": 6
            },
            "testScripts": {
                "failed": 0,
                "pending": 0,
                "total": 6
            },
            "tests": {
                "failed": 0,
                "pending": 0,
                "total": 6
            }
        },
        "timings": {
            "completed": 1478030180551,
            "responseAverage": 238.33333333333334,
            "started": 1478030178143
        },
        "transfers": {
            "responseTotal": 1029
        }
    }
},
{
    "collection": {
        "event": [],
        "name": "Auth Server",
        "info": {
            "id": "ff81396c-87bf-a2b5-e2ab-4c2acc4bd1a5",
            "name": "Auth Server",
            "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
        },
        "item": [
            {
                "_": {
                    "postman_id": "403bfc20-276b-7757-1c3a-1dc196b274ab"
                },
                "description": {
                    "content": "",
                    "type": "text/plain"
                },
                "event": [],
                "id": "403bfc20-276b-7757-1c3a-1dc196b274ab",
                "item": [
                    {
                        "_": {
                            "postman_id": "b8d5cb9e-e4bd-2f3a-65da-6caa49112933"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"Admin\"]",
                                        "    },",
                                        "    \"email\": {",
                                        "        \"type\": \"string\"",
                                        "    },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"venue_ids\": { \"type\": \"array\" },",
                                        "    \"super_admin\": { \"type\": \"boolean\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"email\",",
                                        "      \"session_token\", \"venue_ids\",",
                                        "      \"super_admin\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "b8d5cb9e-e4bd-2f3a-65da-6caa49112933",
                        "name": "Create Admin Session ",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"admin\" }"
                            },
                            "description": {
                                "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic {{admin_authorization}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "8544eaf8-eb39-e922-b952-4d5f6bcebbcd"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "postman.setNextRequest(\"Bad Session Show\");",
                                        "",
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"refresh_count\": { \"type\": \"integer\" },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "8544eaf8-eb39-e922-b952-4d5f6bcebbcd",
                        "name": "Session Show",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "When sent with a valid token in the header, will return the session.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "cf1cd6c2-8c56-0c09-c87a-83bbf3810bab"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "cf1cd6c2-8c56-0c09-c87a-83bbf3810bab",
                        "name": "Session Delete",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Delete the session represented by the token in the header.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "DELETE",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "0998c26c-150b-4237-836c-129f9e7a798b"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"error\": { \"type\": \"string\" }",
                                        "  },",
                                        "  \"required\": [\"error\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 401\"] = responseCode.code === 401;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "0998c26c-150b-4237-836c-129f9e7a798b",
                        "name": "Bad Session Show",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Show using a bad session",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "1111111111111111"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    }
                ],
                "name": "Admin"
            },
            {
                "_": {
                    "postman_id": "f9003972-5b00-4a10-f15b-c4c493d8bb43"
                },
                "description": {
                    "content": "CRUD for AdminRole actions",
                    "type": "text/plain"
                },
                "event": [],
                "id": "f9003972-5b00-4a10-f15b-c4c493d8bb43",
                "item": [
                    {
                        "_": {
                            "postman_id": "c6a5528f-3ee3-c5e8-d40c-e58920d1971f"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"Admin\"]",
                                        "    },",
                                        "    \"email\": {",
                                        "        \"type\": \"string\"",
                                        "    },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"venue_ids\": { \"type\": \"array\" },",
                                        "    \"super_admin\": { \"type\": \"boolean\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"email\",",
                                        "      \"session_token\", \"venue_ids\",",
                                        "      \"super_admin\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"session_token\", jsonData.session_token);",
                                        "postman.setEnvironmentVariable(\"admin_id\", jsonData.id);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "c6a5528f-3ee3-c5e8-d40c-e58920d1971f",
                        "name": "Create Super Admin Session (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"admin\" }"
                            },
                            "description": {
                                "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic {{super_admin_authorization}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "ec19602a-4871-de44-baec-a1f39ebdaa14"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"name\": { \"type\": \"string\" },",
                                        "    \"role_definition\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "twoHundredCode = responseCode.code === 200",
                                        "if(!twoHundredCode) {",
                                        "    postman.setNextRequest(null)",
                                        "    tests[\"Expected 200 status. Got \" + responseCode.code] = false",
                                        "} else {",
                                        "    tests[\"Status code should be 200\"] = true;",
                                        "}",
                                        "tests[schemaString] = validated.valid;",
                                        "",
                                        "// Environments",
                                        "postman.setEnvironmentVariable(\"role_id\", jsonData.id);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "ec19602a-4871-de44-baec-a1f39ebdaa14",
                        "name": "Role create (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"role\":{\n        \"role_definition\": {\n            \"addon_groups\": {\n                \"enabled\": true\n            },\n            \"allocate\": {\n                \"enabled\": true\n            }\n        },\n        \"name\":\"Paladin\"\n    }\n}"
                            },
                            "description": {
                                "content": "First role, used for initial admin role create",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/venues/{{venue_id}}/roles.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "89e2bcb8-816f-c69d-8412-022ac8bfcfae"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "postman.setEnvironmentVariable(\"admin_role_id\", jsonData.id);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "89e2bcb8-816f-c69d-8412-022ac8bfcfae",
                        "name": "Admin Role create",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"admin_role\":{\n        \"role_id\": {{role_id}},\n        \"admin_id\": {{admin_id}}\n    }\n}"
                            },
                            "description": {
                                "content": "Create a new AdminRole",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/venues/{{venue_id}}/admin_roles"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "05f6a4e3-bfe1-0c30-89dd-5f10e9fab053"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "05f6a4e3-bfe1-0c30-89dd-5f10e9fab053",
                        "name": "Admin Role index",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Get all Admin Roles for the given venue",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/venues/{{venue_id}}/admin_roles"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "2d074d0d-ba23-05e0-6a59-238d174c74f9"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "2d074d0d-ba23-05e0-6a59-238d174c74f9",
                        "name": "Admin Role delete",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Delete an existing Admin Role",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{session_token}}"
                                }
                            ],
                            "method": "DELETE",
                            "url": "{{auth_host}}/venues/{{venue_id}}/admin_roles/{{admin_role_id}}"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "9a5f70df-a44a-f2d9-dc70-9aef2957b802"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "9a5f70df-a44a-f2d9-dc70-9aef2957b802",
                        "name": "Role delete (teardown)",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Delete a Role",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{session_token}}"
                                }
                            ],
                            "method": "DELETE",
                            "url": "{{auth_host}}/venues/{{venue_id}}/roles/{{role_id}}"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "9c60b174-22dd-99c8-cd87-645032eb3e93"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "9c60b174-22dd-99c8-cd87-645032eb3e93",
                        "name": "Session Delete",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Delete the session represented by the token in the header.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{session_token}}"
                                }
                            ],
                            "method": "DELETE",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    }
                ],
                "name": "AdminRoles"
            },
            {
                "_": {
                    "postman_id": "91b7c4d8-0506-fff5-5c2f-0700ea3c26dd"
                },
                "description": {
                    "content": "Card CRUD",
                    "type": "text/plain"
                },
                "event": [],
                "id": "91b7c4d8-0506-fff5-5c2f-0700ea3c26dd",
                "item": [
                    {
                        "_": {
                            "postman_id": "30a53cf2-695e-0b28-d82d-3467e9bb9ec4"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"Admin\"]",
                                        "    },",
                                        "    \"email\": {",
                                        "        \"type\": \"string\"",
                                        "    },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"venue_ids\": { \"type\": \"array\" },",
                                        "    \"super_admin\": { \"type\": \"boolean\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"email\",",
                                        "      \"session_token\", \"venue_ids\",",
                                        "      \"super_admin\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "30a53cf2-695e-0b28-d82d-3467e9bb9ec4",
                        "name": "Login (Admin)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"admin\" }"
                            },
                            "description": {
                                "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic {{admin_authorization}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "063d04e3-5946-4029-ef44-9117da4c1ad4"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "if(responseCode.code === 200) {",
                                        "    tests[\"Status code should be 200\"] = true;",
                                        "    if(jsonData.order_takers.length === 0) {",
                                        "        postman.setNextRequest(\"Create Order Taker (setup)\");",
                                        "        tests[\"created order taker\"] = true;",
                                        "    } else {",
                                        "        postman.setEnvironmentVariable(\"order_taker_id\", jsonData.order_takers[0].id);",
                                        "        ",
                                        "        if(postman.getEnvironmentVariable(\"classic\") === true) {",
                                        "            postman.setNextRequest(\"Card Create\")",
                                        "        } else {",
                                        "            postman.setNextRequest(\"Create Cards (setup)\");",
                                        "        }",
                                        "        tests[\"straight to ot login\"] = true;",
                                        "    }",
                                        "} else {",
                                        "    tests[\"Status code should be 200 but was \" + responseCode.code] = responseCode.code === 200;",
                                        "    postman.setNextRequest(null);",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "063d04e3-5946-4029-ef44-9117da4c1ad4",
                        "name": "Ensure Order Taker (setup)",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Creates an order taker that we can test with if one doesn't already exist",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-ADMIN-VENUE",
                                    "value": "{{venue_id}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{api_host}}/api/admin/venue/order_takers?search%5Busername_eq%5D=authtestordertaker"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "6cb808c3-5186-0386-c1b7-6be045afe06d"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "respCode = responseCode.code === 200;",
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "if(respCode) {",
                                        "    postman.setNextRequest(\"Create Cards (setup)\");",
                                        "    tests[\"Status code should be 200\"] = respCode",
                                        "    postman.setEnvironmentVariable(\"order_taker_id\", jsonData.order_taker.id);",
                                        "} else {",
                                        "    tests[\"Expected Response Code to be 200. Got \" + responseCode.code] = respCode",
                                        "    postman.setNextRequest(null);",
                                        "}",
                                        "",
                                        "if(postman.getEnvironmentVariable(\"classic\") === true) {",
                                        "    postman.setNextRequest(\"Card Create\")",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "6cb808c3-5186-0386-c1b7-6be045afe06d",
                        "name": "Create Order Taker (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"order_taker\": {\n        \"username\": \"authtestordertaker\",\n        \"password\": \"bypassword\",\n        \"default_location_id\": {{ot_default_location_id}},\n        \"is_manager\": true,\n        \"pos_keycode\": 1111\n    }\n}"
                            },
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{api_host}}/api/admin/venue/order_takers"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "fffede53-e8e2-d056-ab95-096e43e3e790"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"card_number\", jsonData[0].mag_number);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "fffede53-e8e2-d056-ab95-096e43e3e790",
                        "name": "Create Cards (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": ""
                            },
                            "description": {
                                "content": "Create a list of cards so we can associate one of them with the order taker",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/card_numbers/1"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "88d255ec-a9ae-c2e0-8c22-8268d3cc52c3"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"number\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 30",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"swipe_count\": { \"type\": \"integer\" },",
                                        "    \"printed_number\": {",
                                        "        \"type\": [\"null\", \"string\"]",
                                        "    },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 201\"] = responseCode.code === 201;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "88d255ec-a9ae-c2e0-8c22-8268d3cc52c3",
                        "name": "Card Create",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"card\":{\n        \"order_taker_id\":{{order_taker_id}},\n        \"number\":\"{{card_number}}\",\n        \"expires_at\":\"2017-05-05\"\n    }\n}"
                            },
                            "description": {
                                "content": "Create a Card",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/cards"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "813be270-0fad-48a2-85ec-276323620af2"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"cards\": {",
                                        "      \"type\": \"array\",",
                                        "      \"properties\": {",
                                        "        \"number\": {",
                                        "          \"type\": \"string\",",
                                        "          \"minLength\": 30",
                                        "        },",
                                        "        \"expires_at\": { \"type\": [\"null\", \"string\"] },",
                                        "        \"swipe_count\": { \"type\": \"integer\" },",
                                        "        \"printed_number\": { \"type\": [\"null\", \"string\"] },",
                                        "        \"account\": {",
                                        "          \"type\": \"object\",",
                                        "          \"properties\": {",
                                        "            \"id\": { \"type\": \"integer\" },",
                                        "            \"type\": { \"type\": \"string\" },",
                                        "            \"phone_number\": { \"type\": \"string\" },",
                                        "            \"email\": { \"type\": \"string\" },",
                                        "            \"session_token\": { \"type\": \"string\" }",
                                        "          },",
                                        "          \"required\": [\"id\", \"type\", \"phone_number\", \"email\", \"session_token\"]",
                                        "        }",
                                        "      },",
                                        "      \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                        "    },",
                                        "    \"required\": [\"cards\"]",
                                        "  }",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "813be270-0fad-48a2-85ec-276323620af2",
                        "name": "Cards Index",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Return the cards associated with an account ",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/accounts/{{order_taker_id}}/cards"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "cc6ef1e8-99ed-3463-bee3-25f3f4ee5cb4"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"number\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 30",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"swipe_count\": { \"type\": \"integer\" },",
                                        "    \"printed_number\": {",
                                        "        \"type\": [\"null\", \"string\"]",
                                        "    },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "cc6ef1e8-99ed-3463-bee3-25f3f4ee5cb4",
                        "name": "Card Show",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/cards/{{card_number}}"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "97c5240b-d7a7-45f7-ad4e-7f27a9f7a929"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"number\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 30",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"swipe_count\": { \"type\": \"integer\" },",
                                        "    \"printed_number\": {",
                                        "        \"type\": [\"null\", \"string\"]",
                                        "    },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"card_number\", jsonData.number);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "97c5240b-d7a7-45f7-ad4e-7f27a9f7a929",
                        "name": "Card update",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"card\":{\n        \"order_taker_id\":{{order_taker_id}},\n        \"number\":\"dead-beef-feed-deaf-feeb\",\n        \"expires_at\":\"2019-05-05\"\n    }\n}"
                            },
                            "description": {
                                "content": "Update an existing Card",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "PUT",
                            "url": "{{auth_host}}/cards/{{card_number}}"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "f41cad50-0b21-d7a0-3bee-e7d60cb97f2a"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "f41cad50-0b21-d7a0-3bee-e7d60cb97f2a",
                        "name": "Card delete",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Delete the card identified by the URL parameter",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "DELETE",
                            "url": "{{auth_host}}/cards/{{card_number}}"
                        },
                        "response": []
                    }
                ],
                "name": "Cards"
            },
            {
                "_": {
                    "postman_id": "d504e4ef-f34c-91a3-68f9-590f7b53c82a"
                },
                "description": {
                    "content": "",
                    "type": "text/plain"
                },
                "event": [],
                "id": "d504e4ef-f34c-91a3-68f9-590f7b53c82a",
                "item": [
                    {
                        "_": {
                            "postman_id": "28a23c90-6fac-f144-0376-98425db8c944"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    }",
                                        "  },",
                                        "  \"required\": [\"session_token\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"bpu_session_token\", jsonData.session_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "28a23c90-6fac-f144-0376-98425db8c944",
                        "name": "Ballpark User",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Fetches a Ballpark user, creating if necessary, and providing a session token.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-MLBAM-WUID",
                                    "value": "118cae19-ffdf-4ace-a796-8af9573ae0f5"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/ballpark_user"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "c0deca8d-cba5-d69f-ea58-fcdbc892604c"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"refresh_count\": { \"type\": \"integer\" },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "c0deca8d-cba5-d69f-ea58-fcdbc892604c",
                        "name": "Session Show",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "When sent with a valid token in the header, will return the session.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{bpu_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    }
                ],
                "name": "External Auth User"
            },
            {
                "_": {
                    "postman_id": "589a4ed9-4f9e-7f95-a5ed-3cefb6587a93"
                },
                "description": {
                    "content": "",
                    "type": "text/plain"
                },
                "event": [],
                "id": "589a4ed9-4f9e-7f95-a5ed-3cefb6587a93",
                "item": [
                    {
                        "_": {
                            "postman_id": "424836e1-2cea-57a5-d341-a40a726a52ad"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"Admin\"]",
                                        "    },",
                                        "    \"email\": {",
                                        "        \"type\": \"string\"",
                                        "    },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"venue_ids\": { \"type\": \"array\" },",
                                        "    \"super_admin\": { \"type\": \"boolean\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"email\",",
                                        "      \"session_token\", \"venue_ids\",",
                                        "      \"super_admin\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "424836e1-2cea-57a5-d341-a40a726a52ad",
                        "name": "Login as Admin (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"admin\" }"
                            },
                            "description": {
                                "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic {{admin_authorization}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "b54e6237-6f83-d74f-3c9f-c18e0fb1594e"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "if(responseCode.code === 200) {",
                                        "    tests[\"Status code should be 200\"] = true;",
                                        "    if(jsonData.order_takers.length === 0) {",
                                        "        postman.setNextRequest(\"Create Order Taker (setup)\");",
                                        "        tests[\"created order taker\"] = true;",
                                        "    } else {",
                                        "        ot = jsonData.order_takers[0];",
                                        "        postman.setEnvironmentVariable(\"order_taker_id\", ot.id);",
                                        "        postman.setEnvironmentVariable(\"encoded_pos_keycode\", btoa(ot.venue_id + ':' + ot.pos_keycode));",
                                        "        postman.setNextRequest(\"Create Cards (ot setup)\");",
                                        "        tests[\"straight to ot login\"] = true;",
                                        "    }",
                                        "} else {",
                                        "    tests[\"Status code should be 200 but was\" + responseCode.code] = responseCode.code === 200;",
                                        "    postman.setNextRequest(null);",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "b54e6237-6f83-d74f-3c9f-c18e0fb1594e",
                        "name": "Ensure Order Taker (setup)",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Creates an order taker that we can test with if one doesn't already exist",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-ADMIN-VENUE",
                                    "value": "{{venue_id}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{api_host}}/api/admin/venue/order_takers?search%5Busername_eq%5D=authtestordertaker"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "070992a0-c2af-a988-3dff-8c361442e6ef"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "respCode = responseCode.code === 200;",
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "if(respCode) {",
                                        "    tests[\"Status code should be 200\"] = respCode",
                                        "    postman.setEnvironmentVariable(\"order_taker_id\", jsonData.order_taker.id);",
                                        "    postman.setEnvironmentVariable(\"encoded_pos_keycode\", btoa(jsonData.order_taker.pos_keycode));",
                                        "} else {",
                                        "    tests[\"Expected Response Code to be 200. Got \" + responseCode.code] = respCode",
                                        "    postman.setNextRequest(null);",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "070992a0-c2af-a988-3dff-8c361442e6ef",
                        "name": "Create Order Taker (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"order_taker\": {\n        \"username\": \"authtestordertaker\",\n        \"password\": \"bypassword\",\n        \"default_location_id\": {{ot_default_location_id}},\n        \"is_manager\": true,\n        \"pos_keycode\": 5567\n    }\n}"
                            },
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{api_host}}/api/admin/venue/order_takers"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "431dd3ba-7ac7-e3d8-3969-e6b9a9fe521b"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"card_number\", jsonData[0].mag_number);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "431dd3ba-7ac7-e3d8-3969-e6b9a9fe521b",
                        "name": "Create Cards (ot setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"card\":{\n        \"order_taker_id\":{{order_taker_id}},\n        \"number\":\"{{$guid}}\",\n        \"expires_at\":\"2017-05-05\"\n    }\n}"
                            },
                            "description": {
                                "content": "Create a list of cards so we can associate one of them with the order taker",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/card_numbers/1"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "33a56ede-6599-9c3e-3297-31de2f4ffbaa"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "",
                                        "if(responseCode.code === 200) {",
                                        "    tests[\"Status code should be 200\"] = true;",
                                        "    if(jsonData.cards.length === 0) {",
                                        "        postman.setNextRequest(\"Associate Card with OT (setup)\");",
                                        "        tests[\"created order taker\"] = true;",
                                        "    } else {",
                                        "        postman.setEnvironmentVariable(\"card_number\", jsonData.cards[0].number);",
                                        "        postman.setNextRequest(\"Login (OrderTaker)\");",
                                        "        tests[\"straight to ot login\"] = true;",
                                        "    }",
                                        "} else {",
                                        "    tests[\"Status code should be 200 but was \" + responseCode.code] = responseCode.code === 200;",
                                        "    postman.setNextRequest(null);",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "33a56ede-6599-9c3e-3297-31de2f4ffbaa",
                        "name": "Ensure OT Card (setup)",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/accounts/{{order_taker_id}}/cards"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "9e0a1e8f-5dc0-a0f4-dde2-4d7111bb94d2"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"number\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 30",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"swipe_count\": { \"type\": \"integer\" },",
                                        "    \"printed_number\": {",
                                        "        \"type\": [\"null\", \"string\"]",
                                        "    },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 201\"] = responseCode.code === 201;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "9e0a1e8f-5dc0-a0f4-dde2-4d7111bb94d2",
                        "name": "Associate Card with OT (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"card\":{\n        \"order_taker_id\":{{order_taker_id}},\n        \"number\":\"{{card_number}}\",\n        \"expires_at\":\"2017-05-05\"\n    }\n}"
                            },
                            "description": {
                                "content": "Associate the created card with an order taker",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/cards"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "65edf669-7a23-242b-1f3d-28c325dd4683"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"OrderTaker\"]",
                                        "    },",
                                        "    \"username\": { \"type\": \"string\" },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"is_manager\": { \"type\": \"boolean\" },",
                                        "    \"venue_id\": { \"type\": \"integer\" },",
                                        "    \"venue_ids\": { \"type\": \"array\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"username\",",
                                        "      \"session_token\", \"is_manager\",",
                                        "      \"venue_id\", \"venue_ids\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "65edf669-7a23-242b-1f3d-28c325dd4683",
                        "name": "Login (OrderTaker)",
                        "request": {
                            "auth": {
                                "basic": {
                                    "password": "bypassword",
                                    "username": "authtestordertaker"
                                },
                                "type": "basic"
                            },
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"order_taker\" }"
                            },
                            "description": {
                                "content": "passing in auth_type param of \"order_taker\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic YXV0aHRlc3RvcmRlcnRha2VyOmJ5cGFzc3dvcmQ="
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "7ed54e41-ef1c-cb0a-5682-dc9e00221e44"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"OrderTaker\"]",
                                        "    },",
                                        "    \"username\": { \"type\": \"string\" },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"is_manager\": { \"type\": \"boolean\" },",
                                        "    \"venue_id\": { \"type\": \"integer\" },",
                                        "    \"venue_ids\": { \"type\": \"array\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"username\",",
                                        "      \"session_token\", \"is_manager\",",
                                        "      \"venue_id\", \"venue_ids\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "postman.setEnvironmentVariable(\"order_taker_session_token\", jsonData.session_token)"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "7ed54e41-ef1c-cb0a-5682-dc9e00221e44",
                        "name": "Login (OrderTaker - Access Headers)",
                        "request": {
                            "auth": {
                                "basic": {
                                    "password": "bypassword",
                                    "username": "authtestordertaker"
                                },
                                "type": "basic"
                            },
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"order_taker\" }"
                            },
                            "description": {
                                "content": "* All headers the service expects from Access for Kinesis check-in event\n* passing in auth_type param of \"order_taker\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic YXV0aHRlc3RvcmRlcnRha2VyOmJ5cGFzc3dvcmQ="
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-API-VERSION",
                                    "value": "2.0.2"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-DEVICE-MODEL",
                                    "value": "ZenWidget"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-DEVICE-NAME",
                                    "value": "Ziggy"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-ANDROID-VERSION",
                                    "value": "5.2.3"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-SERIAL",
                                    "value": "1234ABCD"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-DEVICE-TYPE",
                                    "value": "POS"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-PRODUCT-TYPE",
                                    "value": "Tablet"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-VERSION",
                                    "value": "1.2.3"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "3f95c9dd-05a4-017a-0b78-2a3831a72725"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"OrderTaker\"]",
                                        "    },",
                                        "    \"username\": { \"type\": \"string\" },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"is_manager\": { \"type\": \"boolean\" },",
                                        "    \"venue_id\": { \"type\": \"integer\" },",
                                        "    \"venue_ids\": { \"type\": \"array\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"username\",",
                                        "      \"session_token\", \"is_manager\",",
                                        "      \"venue_id\", \"venue_ids\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "3f95c9dd-05a4-017a-0b78-2a3831a72725",
                        "name": "Login (Card)",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "[Prerequisite]\n- Create a Card for an active OrderTaker\n\n[Description]\nAuthenticate via the card number value in the environment",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-CARD-NUMBER",
                                    "value": "{{card_number}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "265ea1a3-e86b-cb7d-0642-f31d3324b60d"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": { \"type\": \"string\" },",
                                        "    \"username\": { \"type\": \"string\" },",
                                        "    \"is_manager\": { \"type\": \"boolean\" },",
                                        "    \"venue_id\": { \"type\": \"integer\" },",
                                        "    \"venue_ids\": { \"type\": \"array\" }",
                                        "  }",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "265ea1a3-e86b-cb7d-0642-f31d3324b60d",
                        "name": "Manager check",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Used for the manager PIN entry check endpoint",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-MANAGER-PIN",
                                    "value": "{{encoded_pos_keycode}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "a164c973-2dd0-c6cc-4042-df0d7743ce27"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"refresh_count\": { \"type\": \"integer\" },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "a164c973-2dd0-c6cc-4042-df0d7743ce27",
                        "name": "Session Show",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "When sent with a valid token in the header, will return the session.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{order_taker_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "d05635a8-3781-2e31-4e53-665f0c5e208e"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code is 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "d05635a8-3781-2e31-4e53-665f0c5e208e",
                        "name": "Session Delete",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Delete the session represented by the token in the header.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{order_taker_session_token}}"
                                }
                            ],
                            "method": "DELETE",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    }
                ],
                "name": "OrderTakers"
            },
            {
                "_": {
                    "postman_id": "91da4a41-44fe-e9c7-4ecd-448a302423cc"
                },
                "description": {
                    "content": "Authorization actions specific to parametric devices",
                    "type": "text/plain"
                },
                "event": [],
                "id": "91da4a41-44fe-e9c7-4ecd-448a302423cc",
                "item": [
                    {
                        "_": {
                            "postman_id": "4cb062ed-8e09-98a1-ab81-dfadb34cf0ca"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": [\"integer\", \"string\"] },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"ParametricDevice\"]",
                                        "    },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"account\": {",
                                        "        \"type\": \"object\",",
                                        "        \"properties\": {",
                                        "            \"id\": { \"type\": [\"integer\", \"string\"] },",
                                        "            \"type\": {",
                                        "                \"type\": \"string\",",
                                        "                \"enum\": [\"ParametricDevice\"]",
                                        "            },",
                                        "            \"venue_id\": { \"type\": [\"null\", \"number\", \"string\"] },",
                                        "            \"venue_ids\": { \"type\": \"array\" }   ",
                                        "        },",
                                        "        \"required\": [\"id\", \"type\", \"venue_id\", \"venue_ids\"]",
                                        "    }",
                                        "  },",
                                        "  \"required\": [\"id\", \"type\", \"session_token\", \"account\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Removing tests until JWT is released",
                                        "",
                                        "// Tests",
                                        "// tests[schemaString] = validated.valid;",
                                        "// tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "// tests[\"X-DEVICE-TOKEN should exist\"] = postman.getResponseHeader(\"X-DEVICE-TOKEN\") !== undefined;",
                                        "",
                                        "// Environment Variables",
                                        "// postman.setEnvironmentVariable(\"session_token\", jsonData.session_token);",
                                        "// postman.setEnvironmentVariable(\"device_jwt\", postman.getResponseHeader(\"X-DEVICE-TOKEN\"))"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "4cb062ed-8e09-98a1-ab81-dfadb34cf0ca",
                        "name": "Login (ParametricDevice)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"parametric_device\" }"
                            },
                            "description": {
                                "content": "passing in auth_type param of \"parametric_device\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic {{parametric_session}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "511cf28d-7a25-3481-822b-c35687979436"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"refresh_count\": { \"type\": \"integer\" },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [\"expires_at\", \"refresh_count\", \"account\"]",
                                        "  // When JWTs are ready, remove above line and uncomment the one below",
                                        "  // \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                        "};",
                                        "",
                                        "// Removing tests until JWT is released",
                                        "",
                                        "// validated = tv4.validateResult(jsonData, schema);",
                                        "// schemaString = \"Valid Response Schema\";",
                                        "// if(validated.valid === false) {",
                                        "//     schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "// }",
                                        "",
                                        "// // Tests",
                                        "// tests[schemaString] = validated.valid;",
                                        "// tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "511cf28d-7a25-3481-822b-c35687979436",
                        "name": "Session (Parametric Device) (valid JWT)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"parametric_device\" }"
                            },
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-DEVICE-TOKEN",
                                    "value": "{{device_jwt}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    }
                ],
                "name": "Parametric Device"
            },
            {
                "_": {
                    "postman_id": "4ae54114-d14d-a7c6-1b56-181451b27cad"
                },
                "description": {
                    "content": "CRUD for making new Roles for administrators",
                    "type": "text/plain"
                },
                "event": [],
                "id": "4ae54114-d14d-a7c6-1b56-181451b27cad",
                "item": [
                    {
                        "_": {
                            "postman_id": "2a8b85cb-0aee-eb13-372b-b726258195d1"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"Admin\"]",
                                        "    },",
                                        "    \"email\": {",
                                        "        \"type\": \"string\"",
                                        "    },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"venue_ids\": { \"type\": \"array\" },",
                                        "    \"super_admin\": { \"type\": \"boolean\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"email\",",
                                        "      \"session_token\", \"venue_ids\",",
                                        "      \"super_admin\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "2a8b85cb-0aee-eb13-372b-b726258195d1",
                        "name": "Create Super Admin Session",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"admin\" }"
                            },
                            "description": {
                                "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic {{super_admin_authorization}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "9282605a-c631-a84b-aa5d-4c780504211d"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "    \"type\": \"object\",",
                                        "    \"properties\": { ",
                                        "        \"id\": { \"type\": \"integer\" },",
                                        "        \"name\": {",
                                        "            \"type\": \"string\",",
                                        "            \"enum\": [\"Paladin\"]",
                                        "        },",
                                        "        \"role_definition\": {",
                                        "            \"type\": [ \"object\" ]",
                                        "        }",
                                        "    },",
                                        "    \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environments",
                                        "postman.setEnvironmentVariable(\"role_id\", jsonData.id);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "9282605a-c631-a84b-aa5d-4c780504211d",
                        "name": "Role create",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"role\":{\n        \"role_definition\":{\n            \"addon_groups\": {\n                \"enabled\": true\n            },\n            \"allocate\": {\n                \"enabled\": true\n            }\n        },\n        \"name\":\"Paladin\"\n    }\n}"
                            },
                            "description": {
                                "content": "Create a Role",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/venues/{{venue_id}}/roles.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "4d3ee5fd-e120-26b3-2e8d-3e991ab0a134"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"name\": { \"type\": \"string\" },",
                                        "    \"role_definition\": { \"type\": [\"string\", \"object\"] }",
                                        "  },",
                                        "  \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "4d3ee5fd-e120-26b3-2e8d-3e991ab0a134",
                        "name": "Role update",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"role\":{\n        \"role_definition\": {\n            \"addon_groups\": {\n                \"enabled\": false\n            },\n            \"allocate\": {\n                \"enabled\": false\n            }\n        },\n        \"name\":\"Fondarkf\"\n    }\n}"
                            },
                            "description": {
                                "content": "Update a Role",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "PUT",
                            "url": "{{auth_host}}/venues/{{venue_id}}/roles/{{role_id}}"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "2c4dcb76-78f9-514e-546a-b1e290eb2df7"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"roles\": {",
                                        "      \"type\": \"array\",",
                                        "      \"properties\": {",
                                        "        \"id\": { \"type\": \"integer\" },",
                                        "        \"name\": { \"type\": \"string\" },",
                                        "        \"role_definition\": { \"type\": [\"string\", \"object\"] }",
                                        "      },",
                                        "      \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                        "    }",
                                        "  },",
                                        "  \"required\": [\"roles\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "2c4dcb76-78f9-514e-546a-b1e290eb2df7",
                        "name": "Role index",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Show Roles for a Venue",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/venues/{{venue_id}}/roles"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "180be6b2-3076-2925-6878-72d1478841b5"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "      \"properties\": {",
                                        "        \"super_admin\": { \"type\": \"boolean\" },",
                                        "        \"id\": { \"type\": [\"null\", \"string\"] },",
                                        "        \"name\": { \"type\": \"string\" },",
                                        "        \"role_definition\": { \"type\": \"object\" }",
                                        "      },",
                                        "      \"required\": [ \"super_admin\", \"id\", \"name\", \"role_definition\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        ""
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "180be6b2-3076-2925-6878-72d1478841b5",
                        "name": "Role mine",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "hits the 'mine' endpoint",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/venues/{{venue_id}}/roles/mine"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "bedfab89-d576-3f0d-de57-0a120164a820"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"name\": { \"type\": \"string\" },",
                                        "    \"role_definition\": { \"type\": [\"string\", \"object\"] }",
                                        "  },",
                                        "  \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "bedfab89-d576-3f0d-de57-0a120164a820",
                        "name": "Role show",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Get a single Role",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/venues/{{venue_id}}/roles/{{role_id}}"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "c0bc6e75-2082-3605-a218-5e88e2c4a607"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "c0bc6e75-2082-3605-a218-5e88e2c4a607",
                        "name": "Role delete",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Delete a Role",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "DELETE",
                            "url": "{{auth_host}}/venues/{{venue_id}}/roles/{{role_id}}"
                        },
                        "response": []
                    }
                ],
                "name": "Roles"
            },
            {
                "_": {
                    "postman_id": "51540708-4bd0-754f-16cd-fa5cc1cd98f6"
                },
                "description": {
                    "content": "",
                    "type": "text/plain"
                },
                "event": [],
                "id": "51540708-4bd0-754f-16cd-fa5cc1cd98f6",
                "item": [
                    {
                        "_": {
                            "postman_id": "fe941dd7-e26c-da9d-1bc0-a8a59c88a0d5"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"Admin\"]",
                                        "    },",
                                        "    \"email\": {",
                                        "        \"type\": \"string\"",
                                        "    },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"venue_ids\": { \"type\": \"array\" },",
                                        "    \"super_admin\": { \"type\": \"boolean\" }",
                                        "  },",
                                        "  \"required\": [",
                                        "      \"id\", \"type\", \"email\",",
                                        "      \"session_token\", \"venue_ids\",",
                                        "      \"super_admin\"",
                                        "  ]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "fe941dd7-e26c-da9d-1bc0-a8a59c88a0d5",
                        "name": "Login as Admin (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"admin\" }"
                            },
                            "description": {
                                "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic {{admin_authorization}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "810f9013-3dab-691d-296d-b7c1c6531c37"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "if(responseCode.code === 200) {",
                                        "    tests[\"Status code should be 200\"] = true;",
                                        "    if(jsonData.users.length === 0) {",
                                        "        postman.setNextRequest(\"Create User (setup)\");",
                                        "        tests[\"created user\"] = true;",
                                        "    } else {",
                                        "        postman.setNextRequest(\"Login (User with email)\");",
                                        "        tests[\"straight to login\"] = true;",
                                        "    }",
                                        "} else {",
                                        "    tests[\"Status code should be 200 but was\" + responseCode.code] = responseCode.code === 200;",
                                        "    postman.setNextRequest(null);",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "810f9013-3dab-691d-296d-b7c1c6531c37",
                        "name": "Ensure User Exsits (setup)",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-ADMIN-VENUE",
                                    "value": "{{venue_id}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{api_host}}/api/admin/venue/users.json?filter%5Bemail_eq%5D=yodawg%40iheardyoulike.com"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "c0a5270b-fdba-eca9-2c6b-9916d7acde05"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "respCode = responseCode.code === 200;",
                                        "if(respCode) {",
                                        "    postman.setNextRequest(\"Login (User with email)\");",
                                        "    tests[\"Status code should be 200\"] = respCode",
                                        "} else {",
                                        "    tests[\"Expected Response Code to be 200. Got \" + responseCode.code] = respCode",
                                        "    postman.setNextRequest(null);",
                                        "}"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "c0a5270b-fdba-eca9-2c6b-9916d7acde05",
                        "name": "Create User (setup)",
                        "request": {
                            "body": {
                                "mode": "raw",
                                "raw": "{\n    \"user\": {\n        \"email\": \"yodawg@iheardyoulike.com\",\n        \"phone_number\": \"512-867-5709\",\n        \"password\": \"bypassword\",\n        \"confirm_password\": \"bypassword\",\n        \"venue_id\": {{venue_id}}\n    }\n}\n"
                            },
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-BYPASS-ADMIN-VENUE",
                                    "value": "{{venue_id}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{admin_session_token}}"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{api_host}}/api/users"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "27536178-196d-304c-5349-5e08619def12"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"User\"]",
                                        "    },",
                                        "    \"phone_number\": { \"type\": \"string\" },",
                                        "    \"email\": { \"type\": \"string\" },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    }",
                                        "  },",
                                        "  \"required\": [\"id\", \"type\", \"phone_number\", \"email\", \"session_token\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"user_session_token\", jsonData.session_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "27536178-196d-304c-5349-5e08619def12",
                        "name": "Login (User with email)",
                        "request": {
                            "auth": {
                                "basic": {
                                    "password": "bypassword",
                                    "username": "yodawg@iheardyoulike.com"
                                },
                                "type": "basic"
                            },
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"user\" }"
                            },
                            "description": {
                                "content": "passing in auth_type param of \"user\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic eW9kYXdnQGloZWFyZHlvdWxpa2UuY29tOmJ5cGFzc3dvcmQ="
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "ef1e525b-9304-013b-d4b6-c90c85708eea"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"id\": { \"type\": \"integer\" },",
                                        "    \"type\": {",
                                        "        \"type\": \"string\",",
                                        "        \"enum\": [\"User\"]",
                                        "    },",
                                        "    \"username\": { \"type\": \"string\" },",
                                        "    \"is_manager\": { \"type\": \"boolean\" },",
                                        "    \"venue_id\": { \"type\": \"integer\" },",
                                        "    \"session_token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"venue_ids\": { \"type\": \"array\" }",
                                        "  }",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                        "",
                                        "// Environment Variables",
                                        "postman.setEnvironmentVariable(\"user_session_token\", jsonData.session_token);"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "ef1e525b-9304-013b-d4b6-c90c85708eea",
                        "name": "Login (User with phone number)",
                        "request": {
                            "auth": {
                                "basic": {
                                    "password": "bypassword",
                                    "username": "5128675709"
                                },
                                "type": "basic"
                            },
                            "body": {
                                "mode": "raw",
                                "raw": "{ \"auth_type\": \"user\" }"
                            },
                            "description": {
                                "content": "passing in auth_type param of \"user\"",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Authorization",
                                    "value": "Basic NTEyODY3NTcwOTpieXBhc3N3b3Jk"
                                },
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "Content-Type",
                                    "value": "application/json"
                                }
                            ],
                            "method": "POST",
                            "url": "{{auth_host}}/auth.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "01ebed93-12af-f4b4-1d06-788b0832a7f0"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "try {",
                                        "    var jsonData = JSON.parse(responseBody);",
                                        "} catch(e) {",
                                        "    jsonData = {}",
                                        "}",
                                        "var schema = {",
                                        "  \"type\": \"object\",",
                                        "  \"properties\": {",
                                        "    \"token\": {",
                                        "        \"type\": \"string\",",
                                        "        \"minLength\": 32",
                                        "    },",
                                        "    \"expires_at\": { \"type\": \"string\" },",
                                        "    \"refresh_count\": { \"type\": \"integer\" },",
                                        "    \"account\": { \"type\": \"object\" }",
                                        "  },",
                                        "  \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                        "};",
                                        "",
                                        "validated = tv4.validateResult(jsonData, schema);",
                                        "schemaString = \"Valid Response Schema\";",
                                        "if(validated.valid === false) {",
                                        "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                        "}",
                                        "",
                                        "// Tests",
                                        "tests[schemaString] = validated.valid;",
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "01ebed93-12af-f4b4-1d06-788b0832a7f0",
                        "name": "Session Show",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "When sent with a valid token in the header, will return the session.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{user_session_token}}"
                                }
                            ],
                            "method": "GET",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    },
                    {
                        "_": {
                            "postman_id": "474a351e-b36b-8390-1f48-27c11a35ca94"
                        },
                        "event": [
                            {
                                "listen": "test",
                                "script": {
                                    "exec": [
                                        "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                    ],
                                    "type": "text/javascript"
                                }
                            }
                        ],
                        "id": "474a351e-b36b-8390-1f48-27c11a35ca94",
                        "name": "Session Delete",
                        "request": {
                            "body": {
                                "formdata": [],
                                "mode": "formdata"
                            },
                            "description": {
                                "content": "Delete the session represented by the token in the header.",
                                "type": "text/plain"
                            },
                            "header": [
                                {
                                    "description": {
                                        "content": "",
                                        "type": "text/plain"
                                    },
                                    "key": "X-SESSION-TOKEN",
                                    "value": "{{user_session_token}}"
                                }
                            ],
                            "method": "DELETE",
                            "url": "{{auth_host}}/session.json"
                        },
                        "response": []
                    }
                ],
                "name": "Users"
            },
            {
                "_": {
                    "postman_id": "50c022ee-de60-2973-1e93-a7c4af9de509"
                },
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "exec": [
                                "try {",
                                "    var jsonData = JSON.parse(responseBody);",
                                "} catch(e) {",
                                "    jsonData = {}",
                                "}",
                                "var schema = {",
                                "  \"type\": \"object\",",
                                "  \"properties\": {",
                                "    \"id\": { \"type\": \"integer\" },",
                                "    \"type\": {",
                                "        \"type\": \"string\",",
                                "        \"enum\": [\"Admin\"]",
                                "    },",
                                "    \"email\": {",
                                "        \"type\": \"string\"",
                                "    },",
                                "    \"session_token\": {",
                                "        \"type\": \"string\",",
                                "        \"minLength\": 32",
                                "    },",
                                "    \"venue_ids\": { \"type\": \"array\" },",
                                "    \"super_admin\": { \"type\": \"boolean\" }",
                                "  },",
                                "  \"required\": [",
                                "      \"id\", \"type\", \"email\",",
                                "      \"session_token\", \"venue_ids\",",
                                "      \"super_admin\"",
                                "  ]",
                                "};",
                                "",
                                "validated = tv4.validateResult(jsonData, schema);",
                                "schemaString = \"Valid Response Schema\";",
                                "if(validated.valid === false) {",
                                "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                "}",
                                "",
                                "// Tests",
                                "tests[schemaString] = validated.valid;",
                                "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                "",
                                "// Environment Variables",
                                "postman.setEnvironmentVariable(\"session_token\", jsonData.session_token);"
                            ],
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "50c022ee-de60-2973-1e93-a7c4af9de509",
                "name": "Create Admin Session  POS Services style",
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"admin\" }"
                    },
                    "description": {
                        "content": "POS Services doesn't send \"Basic\" in front of its authorization header",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic {{admin_authorization}}"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        }
                    ],
                    "method": "POST",
                    "url": "{{auth_host}}/auth.json"
                },
                "response": []
            },
            {
                "_": {
                    "postman_id": "2a518d21-b5d2-b30f-3c77-b6650e08699e"
                },
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "exec": [
                                "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                            ],
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "2a518d21-b5d2-b30f-3c77-b6650e08699e",
                "name": "Status",
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "{{session_token}}"
                        }
                    ],
                    "method": "GET",
                    "url": "{{auth_host}}/status"
                },
                "response": []
            }
        ],
        "variable": []
    },
    "environment": {
        "id": "69e172ac-3b8f-0256-4a7c-ee2f7decc022",
        "name": "Production",
        "values": [
            {
                "key": "api_host",
                "name": "api_host",
                "type": "any",
                "value": "https://api.bypassmobile.com"
            },
            {
                "key": "auth_host",
                "name": "auth_host",
                "type": "any",
                "value": "https://auth.bypassmobile.com"
            },
            {
                "key": "sv_gateway_host",
                "name": "sv_gateway_host",
                "type": "any",
                "value": "https://stored-value.bypassmobile.com"
            },
            {
                "key": "flippy_host",
                "name": "flippy_host",
                "type": "any",
                "value": "https://feature-flip.bypassmobile.com"
            },
            {
                "key": "licensing_host",
                "type": "any",
                "value": "https://api-licensing.bypassmobile.com"
            },
            {
                "key": "standsheets_host",
                "type": "any",
                "value": "https://standsheets.bypassmobile.com"
            },
            {
                "key": "super_admin_authorization",
                "type": "any",
                "value": "MXN1cGVyYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
            },
            {
                "key": "admin_venue_id",
                "type": "any",
                "value": "86"
            },
            {
                "key": "admin_session_token",
                "type": "any",
                "value": "8f8bf37d76184fe5f7694f54c54a1bd7"
            },
            {
                "key": "session_token",
                "type": "any",
                "value": "f4b9233fad92de09c39a9511069224cb"
            },
            {
                "key": "venue_id",
                "type": "any",
                "value": "86"
            },
            {
                "key": "admin_authorization",
                "type": "any",
                "value": "MWJwYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
            },
            {
                "key": "parametric_session",
                "type": "any",
                "value": "Q00wMDAwMDAwMDA2Mjc5NmFkOjk5OTk3ODBmZGIxZmE4ZDE3YTczMWZkYzgxODY1OTM4"
            },
            {
                "key": "parametric_session_token",
                "type": "any",
                "value": "0517b62a16efeeef715e75c9c3e48e04"
            },
            {
                "key": "kaiser_host",
                "type": "any",
                "value": "https://kaiser.bypassmobile.com"
            },
            {
                "key": "ot_default_location_id",
                "type": "any",
                "value": "792"
            },
            {
                "key": "Testable Collections",
                "type": "any",
                "value": "Auth Server,Feature Flip"
            },
            {
                "key": "BELOW IS GENERATED",
                "type": "any",
                "value": "MOVE STATIC STUFF ABOVE"
            },
            {
                "key": "-----------------------",
                "type": "any",
                "value": "-------------------------------"
            },
            {
                "key": "role_id",
                "type": "any",
                "value": "455"
            },
            {
                "key": "admin_id",
                "type": "any",
                "value": "2034"
            },
            {
                "key": "admin_role_id",
                "type": "any",
                "value": "749"
            },
            {
                "key": "order_taker_id",
                "type": "any",
                "value": "29449"
            },
            {
                "key": "encoded_pos_keycode",
                "type": "any",
                "value": "ODY6NTU2Nw=="
            },
            {
                "key": "featureToFlip",
                "type": "any",
                "value": "loyalty_account"
            },
            {
                "key": "account_id",
                "type": "any",
                "value": "119"
            },
            {
                "key": "device_jwt",
                "type": "any",
                "value": "null"
            },
            {
                "key": "card_number",
                "type": "any",
                "value": "E1569063ACF34D5FAB32CFAA62035CB8"
            },
            {
                "key": "bpu_session_token",
                "type": "any",
                "value": "d21c620d559fc1efee983211a8fefa32"
            },
            {
                "key": "order_taker_session_token",
                "type": "any",
                "value": "b98c684cd665311c988448279cbc976c"
            },
            {
                "key": "user_session_token",
                "type": "any",
                "value": "80f33e486ea3888da65678a9a629362c"
            }
        ]
    },
    "globals": {
        "id": "3c0cd942-4dc6-4e95-8c1f-25711d03c118",
        "values": []
    },
    "run": {
        "error": null,
        "executions": [
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "bof": true,
                    "cr": false,
                    "cycles": 1,
                    "empty": false,
                    "eof": false,
                    "iteration": 0,
                    "length": 52,
                    "position": 0,
                    "ref": "21ed5e6f-7bd9-4632-8c97-6535c4a6782d"
                },
                "id": "b8d5cb9e-e4bd-2f3a-65da-6caa49112933",
                "item": {
                    "_": {
                        "postman_id": "b8d5cb9e-e4bd-2f3a-65da-6caa49112933"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"Admin\"]",
                                    "    },",
                                    "    \"email\": {",
                                    "        \"type\": \"string\"",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" },",
                                    "    \"super_admin\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"email\",",
                                    "      \"session_token\", \"venue_ids\",",
                                    "      \"super_admin\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "b8d5cb9e-e4bd-2f3a-65da-6caa49112933",
                    "name": "Create Admin Session ",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"admin\" }"
                        },
                        "description": {
                            "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{admin_authorization}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"admin\" }"
                    },
                    "description": {
                        "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic MWJwYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 24
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":2035,\"type\":\"Admin\",\"session_token\":\"2d4ac14d9267fcc1956870fc54e193e4\",\"email\":\"1bpadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":false,\"venue_ids\":[86]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:18 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "182"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 182,
                    "responseTime": 294,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 1,
                    "ref": "95d02521-bff0-4d31-8e64-631447aa76b2"
                },
                "id": "8544eaf8-eb39-e922-b952-4d5f6bcebbcd",
                "item": {
                    "_": {
                        "postman_id": "8544eaf8-eb39-e922-b952-4d5f6bcebbcd"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "postman.setNextRequest(\"Bad Session Show\");",
                                    "",
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"expires_at\": { \"type\": \"string\" },",
                                    "    \"refresh_count\": { \"type\": \"integer\" },",
                                    "    \"account\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "8544eaf8-eb39-e922-b952-4d5f6bcebbcd",
                    "name": "Session Show",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "When sent with a valid token in the header, will return the session.",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "When sent with a valid token in the header, will return the session.",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "2d4ac14d9267fcc1956870fc54e193e4"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "{\"token\":\"2d4ac14d9267fcc1956870fc54e193e4\",\"expires_at\":\"2016-11-01T19:56:19.623080635Z\",\"refresh_count\":1,\"account\":{\"id\":2035,\"type\":\"Admin\",\"session_token\":\"2d4ac14d9267fcc1956870fc54e193e4\",\"email\":\"1bpadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":false,\"venue_ids\":[86]}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:19 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "301"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 301,
                    "responseTime": 58,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 401"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 3,
                    "ref": "2609a91d-6216-4766-b643-6d296ff3e07c"
                },
                "id": "0998c26c-150b-4237-836c-129f9e7a798b",
                "item": {
                    "_": {
                        "postman_id": "0998c26c-150b-4237-836c-129f9e7a798b"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"error\": { \"type\": \"string\" }",
                                    "  },",
                                    "  \"required\": [\"error\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 401\"] = responseCode.code === 401;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "0998c26c-150b-4237-836c-129f9e7a798b",
                    "name": "Bad Session Show",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Show using a bad session",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "1111111111111111"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Show using a bad session",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "1111111111111111"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "{\"error\":\"invalid token\"}",
                    "code": 401,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:19 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "25"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 25,
                    "responseTime": 54,
                    "size": {},
                    "status": "Unauthorized",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 4,
                    "ref": "f0f7f922-3b7b-4b70-8a96-1370cfbff1e1"
                },
                "id": "c6a5528f-3ee3-c5e8-d40c-e58920d1971f",
                "item": {
                    "_": {
                        "postman_id": "c6a5528f-3ee3-c5e8-d40c-e58920d1971f"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"Admin\"]",
                                    "    },",
                                    "    \"email\": {",
                                    "        \"type\": \"string\"",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" },",
                                    "    \"super_admin\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"email\",",
                                    "      \"session_token\", \"venue_ids\",",
                                    "      \"super_admin\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"session_token\", jsonData.session_token);",
                                    "postman.setEnvironmentVariable(\"admin_id\", jsonData.id);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "c6a5528f-3ee3-c5e8-d40c-e58920d1971f",
                    "name": "Create Super Admin Session (setup)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"admin\" }"
                        },
                        "description": {
                            "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{super_admin_authorization}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"admin\" }"
                    },
                    "description": {
                        "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic MXN1cGVyYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 24
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":2034,\"type\":\"Admin\",\"session_token\":\"dd8c5aeb9da7145f2fcb5e931b4ba8db\",\"email\":\"1superadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":true,\"venue_ids\":[86]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:19 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "184"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 184,
                    "responseTime": 60,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    },
                    {
                        "assertion": "Valid Response Schema"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 5,
                    "ref": "ae1efec2-58d6-4684-9dd0-6c04a4dfc35e"
                },
                "id": "ec19602a-4871-de44-baec-a1f39ebdaa14",
                "item": {
                    "_": {
                        "postman_id": "ec19602a-4871-de44-baec-a1f39ebdaa14"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"name\": { \"type\": \"string\" },",
                                    "    \"role_definition\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "twoHundredCode = responseCode.code === 200",
                                    "if(!twoHundredCode) {",
                                    "    postman.setNextRequest(null)",
                                    "    tests[\"Expected 200 status. Got \" + responseCode.code] = false",
                                    "} else {",
                                    "    tests[\"Status code should be 200\"] = true;",
                                    "}",
                                    "tests[schemaString] = validated.valid;",
                                    "",
                                    "// Environments",
                                    "postman.setEnvironmentVariable(\"role_id\", jsonData.id);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "ec19602a-4871-de44-baec-a1f39ebdaa14",
                    "name": "Role create (setup)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"role\":{\n        \"role_definition\": {\n            \"addon_groups\": {\n                \"enabled\": true\n            },\n            \"allocate\": {\n                \"enabled\": true\n            }\n        },\n        \"name\":\"Paladin\"\n    }\n}"
                        },
                        "description": {
                            "content": "First role, used for initial admin role create",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{session_token}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/venues/{{venue_id}}/roles.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"role\":{\n        \"role_definition\": {\n            \"addon_groups\": {\n                \"enabled\": true\n            },\n            \"allocate\": {\n                \"enabled\": true\n            }\n        },\n        \"name\":\"Paladin\"\n    }\n}"
                    },
                    "description": {
                        "content": "First role, used for initial admin role create",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "dd8c5aeb9da7145f2fcb5e931b4ba8db"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 236
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/venues/86/roles.json"
                },
                "response": {
                    "body": "{\"id\":454,\"name\":\"Paladin\",\"organization_id\":82,\"role_definition\":{\"addon_groups\":{\"enabled\":true},\"allocate\":{\"enabled\":true}},\"venue_id\":86}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:19 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "142"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 142,
                    "responseTime": 66,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 6,
                    "ref": "dbf5bcde-7a05-4a91-a8b1-6f6291a37b97"
                },
                "id": "89e2bcb8-816f-c69d-8412-022ac8bfcfae",
                "item": {
                    "_": {
                        "postman_id": "89e2bcb8-816f-c69d-8412-022ac8bfcfae"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "postman.setEnvironmentVariable(\"admin_role_id\", jsonData.id);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "89e2bcb8-816f-c69d-8412-022ac8bfcfae",
                    "name": "Admin Role create",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"admin_role\":{\n        \"role_id\": {{role_id}},\n        \"admin_id\": {{admin_id}}\n    }\n}"
                        },
                        "description": {
                            "content": "Create a new AdminRole",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{session_token}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/venues/{{venue_id}}/admin_roles"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"admin_role\":{\n        \"role_id\": 454,\n        \"admin_id\": 2034\n    }\n}"
                    },
                    "description": {
                        "content": "Create a new AdminRole",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "dd8c5aeb9da7145f2fcb5e931b4ba8db"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 77
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/venues/86/admin_roles"
                },
                "response": {
                    "body": "{\"id\":749,\"admin_id\":2034,\"role_id\":454,\"organization_id\":82,\"venue_id\":86,\"role_name\":\"Paladin\"}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "97"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 97,
                    "responseTime": 71,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 7,
                    "ref": "ebafa381-dfd2-469e-9e16-72a9d462ff08"
                },
                "id": "05f6a4e3-bfe1-0c30-89dd-5f10e9fab053",
                "item": {
                    "_": {
                        "postman_id": "05f6a4e3-bfe1-0c30-89dd-5f10e9fab053"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "05f6a4e3-bfe1-0c30-89dd-5f10e9fab053",
                    "name": "Admin Role index",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Get all Admin Roles for the given venue",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/venues/{{venue_id}}/admin_roles"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Get all Admin Roles for the given venue",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "dd8c5aeb9da7145f2fcb5e931b4ba8db"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/venues/86/admin_roles"
                },
                "response": {
                    "body": "[{\"id\":25,\"admin_id\":708,\"role_id\":2,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"Inventory Manager\"},{\"id\":27,\"admin_id\":756,\"role_id\":12,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"King of Some Things\"},{\"id\":40,\"admin_id\":874,\"role_id\":2,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"Inventory Manager\"},{\"id\":41,\"admin_id\":900,\"role_id\":1,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"Suites Manager\"},{\"id\":42,\"admin_id\":923,\"role_id\":5,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"3\"},{\"id\":43,\"admin_id\":928,\"role_id\":7,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"five star manager\"},{\"id\":44,\"admin_id\":929,\"role_id\":8,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"A Type of Manager\"},{\"id\":197,\"admin_id\":659,\"role_id\":114,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"Smashburger\"},{\"id\":240,\"admin_id\":1575,\"role_id\":2,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"Inventory Manager\"},{\"id\":261,\"admin_id\":197,\"role_id\":9,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"Queen of Some Things\"},{\"id\":276,\"admin_id\":1559,\"role_id\":158,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"Jedi\"},{\"id\":277,\"admin_id\":624,\"role_id\":9,\"organization_id\":0,\"venue_id\":86,\"role_name\":\"Queen of Some Things\"},{\"id\":401,\"admin_id\":247,\"role_id\":2,\"organization_id\":82,\"venue_id\":86,\"role_name\":\"Inventory Manager\"},{\"id\":402,\"admin_id\":806,\"role_id\":113,\"organization_id\":82,\"venue_id\":86,\"role_name\":\"test3\"},{\"id\":403,\"admin_id\":761,\"role_id\":2,\"organization_id\":82,\"venue_id\":86,\"role_name\":\"Inventory Manager\"},{\"id\":404,\"admin_id\":624,\"role_id\":7,\"organization_id\":82,\"venue_id\":86,\"role_name\":\"five star manager\"},{\"id\":708,\"admin_id\":2118,\"role_id\":387,\"organization_id\":82,\"venue_id\":86,\"role_name\":\"Employees only\"},{\"id\":712,\"admin_id\":2118,\"role_id\":387,\"organization_id\":82,\"venue_id\":86,\"role_name\":\"Employees only\"},{\"id\":749,\"admin_id\":2034,\"role_id\":454,\"organization_id\":82,\"venue_id\":86,\"role_name\":\"Paladin\"}]",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "1937"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 1937,
                    "responseTime": 68,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 8,
                    "ref": "a339de29-9764-4d28-94b4-e050cdd23367"
                },
                "id": "2d074d0d-ba23-05e0-6a59-238d174c74f9",
                "item": {
                    "_": {
                        "postman_id": "2d074d0d-ba23-05e0-6a59-238d174c74f9"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "2d074d0d-ba23-05e0-6a59-238d174c74f9",
                    "name": "Admin Role delete",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Delete an existing Admin Role",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{session_token}}"
                            }
                        ],
                        "method": "DELETE",
                        "url": "{{auth_host}}/venues/{{venue_id}}/admin_roles/{{admin_role_id}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Delete an existing Admin Role",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "dd8c5aeb9da7145f2fcb5e931b4ba8db"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "DELETE",
                    "url": "https://auth.bypassmobile.com/venues/86/admin_roles/749"
                },
                "response": {
                    "body": "",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 0,
                    "responseTime": 55,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 9,
                    "ref": "65ca1314-694e-4416-a2d9-524f4ffef493"
                },
                "id": "9a5f70df-a44a-f2d9-dc70-9aef2957b802",
                "item": {
                    "_": {
                        "postman_id": "9a5f70df-a44a-f2d9-dc70-9aef2957b802"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "9a5f70df-a44a-f2d9-dc70-9aef2957b802",
                    "name": "Role delete (teardown)",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Delete a Role",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{session_token}}"
                            }
                        ],
                        "method": "DELETE",
                        "url": "{{auth_host}}/venues/{{venue_id}}/roles/{{role_id}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Delete a Role",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "dd8c5aeb9da7145f2fcb5e931b4ba8db"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "DELETE",
                    "url": "https://auth.bypassmobile.com/venues/86/roles/454"
                },
                "response": {
                    "body": "",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 0,
                    "responseTime": 80,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 10,
                    "ref": "98eea8bf-46de-4c8a-b98e-479ce4e14936"
                },
                "id": "9c60b174-22dd-99c8-cd87-645032eb3e93",
                "item": {
                    "_": {
                        "postman_id": "9c60b174-22dd-99c8-cd87-645032eb3e93"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "9c60b174-22dd-99c8-cd87-645032eb3e93",
                    "name": "Session Delete",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Delete the session represented by the token in the header.",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{session_token}}"
                            }
                        ],
                        "method": "DELETE",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Delete the session represented by the token in the header.",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "dd8c5aeb9da7145f2fcb5e931b4ba8db"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "DELETE",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 0,
                    "responseTime": 56,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 11,
                    "ref": "98ed3c3d-56df-4450-b2f1-219432eafc8c"
                },
                "id": "30a53cf2-695e-0b28-d82d-3467e9bb9ec4",
                "item": {
                    "_": {
                        "postman_id": "30a53cf2-695e-0b28-d82d-3467e9bb9ec4"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"Admin\"]",
                                    "    },",
                                    "    \"email\": {",
                                    "        \"type\": \"string\"",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" },",
                                    "    \"super_admin\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"email\",",
                                    "      \"session_token\", \"venue_ids\",",
                                    "      \"super_admin\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "30a53cf2-695e-0b28-d82d-3467e9bb9ec4",
                    "name": "Login (Admin)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"admin\" }"
                        },
                        "description": {
                            "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{admin_authorization}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"admin\" }"
                    },
                    "description": {
                        "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic MWJwYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 24
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":2035,\"type\":\"Admin\",\"session_token\":\"97d030e1b8c808d9d86cddb0c7785301\",\"email\":\"1bpadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":false,\"venue_ids\":[86]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:20 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "182"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 182,
                    "responseTime": 62,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    },
                    {
                        "assertion": "straight to ot login"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 12,
                    "ref": "06dc9394-ac24-45da-9183-ab9860496f33"
                },
                "id": "063d04e3-5946-4029-ef44-9117da4c1ad4",
                "item": {
                    "_": {
                        "postman_id": "063d04e3-5946-4029-ef44-9117da4c1ad4"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "if(responseCode.code === 200) {",
                                    "    tests[\"Status code should be 200\"] = true;",
                                    "    if(jsonData.order_takers.length === 0) {",
                                    "        postman.setNextRequest(\"Create Order Taker (setup)\");",
                                    "        tests[\"created order taker\"] = true;",
                                    "    } else {",
                                    "        postman.setEnvironmentVariable(\"order_taker_id\", jsonData.order_takers[0].id);",
                                    "        ",
                                    "        if(postman.getEnvironmentVariable(\"classic\") === true) {",
                                    "            postman.setNextRequest(\"Card Create\")",
                                    "        } else {",
                                    "            postman.setNextRequest(\"Create Cards (setup)\");",
                                    "        }",
                                    "        tests[\"straight to ot login\"] = true;",
                                    "    }",
                                    "} else {",
                                    "    tests[\"Status code should be 200 but was \" + responseCode.code] = responseCode.code === 200;",
                                    "    postman.setNextRequest(null);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "063d04e3-5946-4029-ef44-9117da4c1ad4",
                    "name": "Ensure Order Taker (setup)",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Creates an order taker that we can test with if one doesn't already exist",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-ADMIN-VENUE",
                                "value": "{{venue_id}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{api_host}}/api/admin/venue/order_takers?search%5Busername_eq%5D=authtestordertaker"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Creates an order taker that we can test with if one doesn't already exist",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "97d030e1b8c808d9d86cddb0c7785301"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-ADMIN-VENUE",
                            "value": "86"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "api.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://api.bypassmobile.com/api/admin/venue/order_takers?search%5Busername_eq%5D=authtestordertaker"
                },
                "response": {
                    "body": "{\"order_takers\":[{\"id\":29449,\"username\":\"authtestordertaker\",\"default_location_id\":792,\"hawker\":false,\"portables\":false,\"is_manager\":true,\"suites_attendant\":true,\"mobile_order_taker\":true,\"venue_id\":86,\"password\":null,\"pos_keycode\":\"5567\",\"active\":true,\"access\":true,\"external_employee_id\":null,\"email\":null,\"phone_number\":null,\"name\":null,\"location\":{\"id\":792,\"name\":\"Ballpark\",\"type\":\"Concession\"}}],\"meta\":{\"pages\":7,\"page\":1,\"per_page\":20,\"count\":137}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Cache-Control",
                            "value": "max-age=0, private, must-revalidate"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:21 GMT"
                        },
                        {
                            "key": "ETag",
                            "value": "\"15043912c932799237402f38d957357e\""
                        },
                        {
                            "key": "Set-Cookie",
                            "value": "_session_id=8ed4306e35b063404e86ee30e5d5664d; path=/; expires=Tue, 01-Nov-2016 20:56:21 GMT; secure; HttpOnly"
                        },
                        {
                            "key": "X-Rack-Cache",
                            "value": "miss"
                        },
                        {
                            "key": "X-Request-Id",
                            "value": "baccbd3b08b8c7d434373465cc1b156f"
                        },
                        {
                            "key": "X-Runtime",
                            "value": "0.117978"
                        },
                        {
                            "key": "X-UA-Compatible",
                            "value": "IE=Edge,chrome=1"
                        },
                        {
                            "key": "Content-Length",
                            "value": "456"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 456,
                    "responseTime": 356,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 14,
                    "ref": "a668e6d9-b85f-40d0-a2fe-01eecc91f2e0"
                },
                "id": "fffede53-e8e2-d056-ab95-096e43e3e790",
                "item": {
                    "_": {
                        "postman_id": "fffede53-e8e2-d056-ab95-096e43e3e790"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"card_number\", jsonData[0].mag_number);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "fffede53-e8e2-d056-ab95-096e43e3e790",
                    "name": "Create Cards (setup)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "description": {
                            "content": "Create a list of cards so we can associate one of them with the order taker",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/card_numbers/1"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": ""
                    },
                    "description": {
                        "content": "Create a list of cards so we can associate one of them with the order taker",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "97d030e1b8c808d9d86cddb0c7785301"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/card_numbers/1"
                },
                "response": {
                    "body": "[{\"id\":225715,\"mag_number\":\"E26A9F30629844B7A2BD975603992621\",\"printed_number\":\"225715\"}]",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:21 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "89"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 89,
                    "responseTime": 60,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 201"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 15,
                    "ref": "f593f47d-6628-449e-a7e1-08cf3e99f1af"
                },
                "id": "88d255ec-a9ae-c2e0-8c22-8268d3cc52c3",
                "item": {
                    "_": {
                        "postman_id": "88d255ec-a9ae-c2e0-8c22-8268d3cc52c3"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"number\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 30",
                                    "    },",
                                    "    \"expires_at\": { \"type\": \"string\" },",
                                    "    \"swipe_count\": { \"type\": \"integer\" },",
                                    "    \"printed_number\": {",
                                    "        \"type\": [\"null\", \"string\"]",
                                    "    },",
                                    "    \"account\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 201\"] = responseCode.code === 201;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "88d255ec-a9ae-c2e0-8c22-8268d3cc52c3",
                    "name": "Card Create",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"card\":{\n        \"order_taker_id\":{{order_taker_id}},\n        \"number\":\"{{card_number}}\",\n        \"expires_at\":\"2017-05-05\"\n    }\n}"
                        },
                        "description": {
                            "content": "Create a Card",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/cards"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"card\":{\n        \"order_taker_id\":29449,\n        \"number\":\"E26A9F30629844B7A2BD975603992621\",\n        \"expires_at\":\"2017-05-05\"\n    }\n}"
                    },
                    "description": {
                        "content": "Create a Card",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "97d030e1b8c808d9d86cddb0c7785301"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 141
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/cards"
                },
                "response": {
                    "body": "{\"number\":\"E26A9F30629844B7A2BD975603992621\",\"expires_at\":\"2017-05-05T00:00:00Z\",\"swipe_count\":0,\"order_taker_id\":29449,\"printed_number\":\"E26A9F30629844B7A2BD975603992621\",\"account\":{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"d2d679d6b1ba34357dbb76e08b5a1281\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}}",
                    "code": 201,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:21 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "347"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 347,
                    "responseTime": 65,
                    "size": {},
                    "status": "Created",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 16,
                    "ref": "8deca7b4-95b4-45db-90d1-752ac0e0e10f"
                },
                "id": "813be270-0fad-48a2-85ec-276323620af2",
                "item": {
                    "_": {
                        "postman_id": "813be270-0fad-48a2-85ec-276323620af2"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"cards\": {",
                                    "      \"type\": \"array\",",
                                    "      \"properties\": {",
                                    "        \"number\": {",
                                    "          \"type\": \"string\",",
                                    "          \"minLength\": 30",
                                    "        },",
                                    "        \"expires_at\": { \"type\": [\"null\", \"string\"] },",
                                    "        \"swipe_count\": { \"type\": \"integer\" },",
                                    "        \"printed_number\": { \"type\": [\"null\", \"string\"] },",
                                    "        \"account\": {",
                                    "          \"type\": \"object\",",
                                    "          \"properties\": {",
                                    "            \"id\": { \"type\": \"integer\" },",
                                    "            \"type\": { \"type\": \"string\" },",
                                    "            \"phone_number\": { \"type\": \"string\" },",
                                    "            \"email\": { \"type\": \"string\" },",
                                    "            \"session_token\": { \"type\": \"string\" }",
                                    "          },",
                                    "          \"required\": [\"id\", \"type\", \"phone_number\", \"email\", \"session_token\"]",
                                    "        }",
                                    "      },",
                                    "      \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                    "    },",
                                    "    \"required\": [\"cards\"]",
                                    "  }",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "813be270-0fad-48a2-85ec-276323620af2",
                    "name": "Cards Index",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Return the cards associated with an account ",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/accounts/{{order_taker_id}}/cards"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Return the cards associated with an account ",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "97d030e1b8c808d9d86cddb0c7785301"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/accounts/29449/cards"
                },
                "response": {
                    "body": "{\"cards\":[{\"number\":\"E1569063ACF34D5FAB32CFAA62035CB8\",\"expires_at\":\"2017-05-05T00:00:00Z\",\"swipe_count\":0,\"order_taker_id\":29449,\"printed_number\":\"E1569063ACF34D5FAB32CFAA62035CB8\",\"account\":{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"d2d679d6b1ba34357dbb76e08b5a1281\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}},{\"number\":\"E26A9F30629844B7A2BD975603992621\",\"expires_at\":\"2017-05-05T00:00:00Z\",\"swipe_count\":0,\"order_taker_id\":29449,\"printed_number\":\"E26A9F30629844B7A2BD975603992621\",\"account\":{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"d2d679d6b1ba34357dbb76e08b5a1281\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}}]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:21 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "707"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 707,
                    "responseTime": 58,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 17,
                    "ref": "5312cdcf-d031-46e4-8b9b-64e3f09d740f"
                },
                "id": "cc6ef1e8-99ed-3463-bee3-25f3f4ee5cb4",
                "item": {
                    "_": {
                        "postman_id": "cc6ef1e8-99ed-3463-bee3-25f3f4ee5cb4"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"number\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 30",
                                    "    },",
                                    "    \"expires_at\": { \"type\": \"string\" },",
                                    "    \"swipe_count\": { \"type\": \"integer\" },",
                                    "    \"printed_number\": {",
                                    "        \"type\": [\"null\", \"string\"]",
                                    "    },",
                                    "    \"account\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "cc6ef1e8-99ed-3463-bee3-25f3f4ee5cb4",
                    "name": "Card Show",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/cards/{{card_number}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "97d030e1b8c808d9d86cddb0c7785301"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/cards/E26A9F30629844B7A2BD975603992621"
                },
                "response": {
                    "body": "{\"number\":\"E26A9F30629844B7A2BD975603992621\",\"expires_at\":\"2017-05-05T00:00:00Z\",\"swipe_count\":0,\"order_taker_id\":29449,\"printed_number\":\"E26A9F30629844B7A2BD975603992621\",\"account\":{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"d2d679d6b1ba34357dbb76e08b5a1281\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:21 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "347"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 347,
                    "responseTime": 58,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 18,
                    "ref": "94917f08-af9c-4cea-9734-86e1df00c99f"
                },
                "id": "97c5240b-d7a7-45f7-ad4e-7f27a9f7a929",
                "item": {
                    "_": {
                        "postman_id": "97c5240b-d7a7-45f7-ad4e-7f27a9f7a929"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"number\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 30",
                                    "    },",
                                    "    \"expires_at\": { \"type\": \"string\" },",
                                    "    \"swipe_count\": { \"type\": \"integer\" },",
                                    "    \"printed_number\": {",
                                    "        \"type\": [\"null\", \"string\"]",
                                    "    },",
                                    "    \"account\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [ \"number\", \"expires_at\", \"swipe_count\", \"printed_number\", \"account\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"card_number\", jsonData.number);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "97c5240b-d7a7-45f7-ad4e-7f27a9f7a929",
                    "name": "Card update",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"card\":{\n        \"order_taker_id\":{{order_taker_id}},\n        \"number\":\"dead-beef-feed-deaf-feeb\",\n        \"expires_at\":\"2019-05-05\"\n    }\n}"
                        },
                        "description": {
                            "content": "Update an existing Card",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "PUT",
                        "url": "{{auth_host}}/cards/{{card_number}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"card\":{\n        \"order_taker_id\":29449,\n        \"number\":\"dead-beef-feed-deaf-feeb\",\n        \"expires_at\":\"2019-05-05\"\n    }\n}"
                    },
                    "description": {
                        "content": "Update an existing Card",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "97d030e1b8c808d9d86cddb0c7785301"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 133
                        }
                    ],
                    "method": "PUT",
                    "url": "https://auth.bypassmobile.com/cards/E26A9F30629844B7A2BD975603992621"
                },
                "response": {
                    "body": "{\"number\":\"E26A9F30629844B7A2BD975603992621\",\"expires_at\":\"2019-05-05T00:00:00Z\",\"swipe_count\":0,\"order_taker_id\":29449,\"printed_number\":\"E26A9F30629844B7A2BD975603992621\",\"account\":{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"d2d679d6b1ba34357dbb76e08b5a1281\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:21 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "347"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 347,
                    "responseTime": 60,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 19,
                    "ref": "c300130d-7fb2-4aff-8231-4926f85de271"
                },
                "id": "f41cad50-0b21-d7a0-3bee-e7d60cb97f2a",
                "item": {
                    "_": {
                        "postman_id": "f41cad50-0b21-d7a0-3bee-e7d60cb97f2a"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "f41cad50-0b21-d7a0-3bee-e7d60cb97f2a",
                    "name": "Card delete",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Delete the card identified by the URL parameter",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "DELETE",
                        "url": "{{auth_host}}/cards/{{card_number}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Delete the card identified by the URL parameter",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "97d030e1b8c808d9d86cddb0c7785301"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "DELETE",
                    "url": "https://auth.bypassmobile.com/cards/E26A9F30629844B7A2BD975603992621"
                },
                "response": {
                    "body": "",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:21 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 0,
                    "responseTime": 64,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 20,
                    "ref": "84d7b322-d6c6-4daf-8484-d336bc1ffc7d"
                },
                "id": "28a23c90-6fac-f144-0376-98425db8c944",
                "item": {
                    "_": {
                        "postman_id": "28a23c90-6fac-f144-0376-98425db8c944"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    }",
                                    "  },",
                                    "  \"required\": [\"session_token\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"bpu_session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "28a23c90-6fac-f144-0376-98425db8c944",
                    "name": "Ballpark User",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Fetches a Ballpark user, creating if necessary, and providing a session token.",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-MLBAM-WUID",
                                "value": "118cae19-ffdf-4ace-a796-8af9573ae0f5"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/ballpark_user"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Fetches a Ballpark user, creating if necessary, and providing a session token.",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-MLBAM-WUID",
                            "value": "118cae19-ffdf-4ace-a796-8af9573ae0f5"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/ballpark_user"
                },
                "response": {
                    "body": "{\"session_token\":\"d21c620d559fc1efee983211a8fefa32\"}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:21 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "52"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 52,
                    "responseTime": 57,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 21,
                    "ref": "6c9cd70b-d181-47ae-8baf-33d2a696628d"
                },
                "id": "c0deca8d-cba5-d69f-ea58-fcdbc892604c",
                "item": {
                    "_": {
                        "postman_id": "c0deca8d-cba5-d69f-ea58-fcdbc892604c"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"expires_at\": { \"type\": \"string\" },",
                                    "    \"refresh_count\": { \"type\": \"integer\" },",
                                    "    \"account\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "c0deca8d-cba5-d69f-ea58-fcdbc892604c",
                    "name": "Session Show",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "When sent with a valid token in the header, will return the session.",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{bpu_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "When sent with a valid token in the header, will return the session.",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "d21c620d559fc1efee983211a8fefa32"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "{\"token\":\"d21c620d559fc1efee983211a8fefa32\",\"expires_at\":\"2016-11-01T19:56:21.995927849Z\",\"refresh_count\":219,\"account\":{\"id\":10858,\"type\":\"ExternalAuthUser\",\"external_uuid\":\"118cae19-ffdf-4ace-a796-8af9573ae0f5\"}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:22 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "214"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 214,
                    "responseTime": 63,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 22,
                    "ref": "0061658a-9f3b-47c4-8853-e0ebf56e3a06"
                },
                "id": "424836e1-2cea-57a5-d341-a40a726a52ad",
                "item": {
                    "_": {
                        "postman_id": "424836e1-2cea-57a5-d341-a40a726a52ad"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"Admin\"]",
                                    "    },",
                                    "    \"email\": {",
                                    "        \"type\": \"string\"",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" },",
                                    "    \"super_admin\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"email\",",
                                    "      \"session_token\", \"venue_ids\",",
                                    "      \"super_admin\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "424836e1-2cea-57a5-d341-a40a726a52ad",
                    "name": "Login as Admin (setup)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"admin\" }"
                        },
                        "description": {
                            "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{admin_authorization}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"admin\" }"
                    },
                    "description": {
                        "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic MWJwYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 24
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":2035,\"type\":\"Admin\",\"session_token\":\"05604729e41cb88e8571906231770b83\",\"email\":\"1bpadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":false,\"venue_ids\":[86]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:22 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "182"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 182,
                    "responseTime": 58,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    },
                    {
                        "assertion": "straight to ot login"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 23,
                    "ref": "91d49717-fb33-4a58-b4a3-d5e75eda44da"
                },
                "id": "b54e6237-6f83-d74f-3c9f-c18e0fb1594e",
                "item": {
                    "_": {
                        "postman_id": "b54e6237-6f83-d74f-3c9f-c18e0fb1594e"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "if(responseCode.code === 200) {",
                                    "    tests[\"Status code should be 200\"] = true;",
                                    "    if(jsonData.order_takers.length === 0) {",
                                    "        postman.setNextRequest(\"Create Order Taker (setup)\");",
                                    "        tests[\"created order taker\"] = true;",
                                    "    } else {",
                                    "        ot = jsonData.order_takers[0];",
                                    "        postman.setEnvironmentVariable(\"order_taker_id\", ot.id);",
                                    "        postman.setEnvironmentVariable(\"encoded_pos_keycode\", btoa(ot.venue_id + ':' + ot.pos_keycode));",
                                    "        postman.setNextRequest(\"Create Cards (ot setup)\");",
                                    "        tests[\"straight to ot login\"] = true;",
                                    "    }",
                                    "} else {",
                                    "    tests[\"Status code should be 200 but was\" + responseCode.code] = responseCode.code === 200;",
                                    "    postman.setNextRequest(null);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "b54e6237-6f83-d74f-3c9f-c18e0fb1594e",
                    "name": "Ensure Order Taker (setup)",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Creates an order taker that we can test with if one doesn't already exist",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-ADMIN-VENUE",
                                "value": "{{venue_id}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{api_host}}/api/admin/venue/order_takers?search%5Busername_eq%5D=authtestordertaker"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Creates an order taker that we can test with if one doesn't already exist",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "05604729e41cb88e8571906231770b83"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-ADMIN-VENUE",
                            "value": "86"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "api.bypassmobile.com"
                        },
                        {
                            "key": "cookie",
                            "value": "_session_id=8ed4306e35b063404e86ee30e5d5664d"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://api.bypassmobile.com/api/admin/venue/order_takers?search%5Busername_eq%5D=authtestordertaker"
                },
                "response": {
                    "body": "{\"order_takers\":[{\"id\":29449,\"username\":\"authtestordertaker\",\"default_location_id\":792,\"hawker\":false,\"portables\":false,\"is_manager\":true,\"suites_attendant\":true,\"mobile_order_taker\":true,\"venue_id\":86,\"password\":null,\"pos_keycode\":\"5567\",\"active\":true,\"access\":true,\"external_employee_id\":null,\"email\":null,\"phone_number\":null,\"name\":null,\"location\":{\"id\":792,\"name\":\"Ballpark\",\"type\":\"Concession\"}}],\"meta\":{\"pages\":7,\"page\":1,\"per_page\":20,\"count\":137}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Cache-Control",
                            "value": "must-revalidate, private, max-age=0"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:22 GMT"
                        },
                        {
                            "key": "ETag",
                            "value": "\"15043912c932799237402f38d957357e\""
                        },
                        {
                            "key": "Set-Cookie",
                            "value": "_session_id=8ed4306e35b063404e86ee30e5d5664d; path=/; expires=Tue, 01-Nov-2016 20:56:22 GMT; secure; HttpOnly"
                        },
                        {
                            "key": "X-Rack-Cache",
                            "value": "miss"
                        },
                        {
                            "key": "X-Request-Id",
                            "value": "c170b9a2d8b37c8762d1ccd1da46a883"
                        },
                        {
                            "key": "X-Runtime",
                            "value": "0.112631"
                        },
                        {
                            "key": "X-UA-Compatible",
                            "value": "IE=Edge,chrome=1"
                        },
                        {
                            "key": "Content-Length",
                            "value": "456"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 456,
                    "responseTime": 164,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 25,
                    "ref": "0df47792-6064-4a00-b6e2-4cd249f08607"
                },
                "id": "431dd3ba-7ac7-e3d8-3969-e6b9a9fe521b",
                "item": {
                    "_": {
                        "postman_id": "431dd3ba-7ac7-e3d8-3969-e6b9a9fe521b"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"card_number\", jsonData[0].mag_number);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "431dd3ba-7ac7-e3d8-3969-e6b9a9fe521b",
                    "name": "Create Cards (ot setup)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"card\":{\n        \"order_taker_id\":{{order_taker_id}},\n        \"number\":\"{{$guid}}\",\n        \"expires_at\":\"2017-05-05\"\n    }\n}"
                        },
                        "description": {
                            "content": "Create a list of cards so we can associate one of them with the order taker",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/card_numbers/1"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"card\":{\n        \"order_taker_id\":29449,\n        \"number\":\"18c527b9-19bf-46cb-af42-1836e183edc9\",\n        \"expires_at\":\"2017-05-05\"\n    }\n}"
                    },
                    "description": {
                        "content": "Create a list of cards so we can associate one of them with the order taker",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "05604729e41cb88e8571906231770b83"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 145
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/card_numbers/1"
                },
                "response": {
                    "body": "[{\"id\":225716,\"mag_number\":\"120845D962904F038FA1E0D64D60D6D8\",\"printed_number\":\"225716\"}]",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:22 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "89"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 89,
                    "responseTime": 67,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    },
                    {
                        "assertion": "straight to ot login"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 26,
                    "ref": "70d7fdfb-79ca-41a2-9a97-65c9e7b31f0a"
                },
                "id": "33a56ede-6599-9c3e-3297-31de2f4ffbaa",
                "item": {
                    "_": {
                        "postman_id": "33a56ede-6599-9c3e-3297-31de2f4ffbaa"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "",
                                    "if(responseCode.code === 200) {",
                                    "    tests[\"Status code should be 200\"] = true;",
                                    "    if(jsonData.cards.length === 0) {",
                                    "        postman.setNextRequest(\"Associate Card with OT (setup)\");",
                                    "        tests[\"created order taker\"] = true;",
                                    "    } else {",
                                    "        postman.setEnvironmentVariable(\"card_number\", jsonData.cards[0].number);",
                                    "        postman.setNextRequest(\"Login (OrderTaker)\");",
                                    "        tests[\"straight to ot login\"] = true;",
                                    "    }",
                                    "} else {",
                                    "    tests[\"Status code should be 200 but was \" + responseCode.code] = responseCode.code === 200;",
                                    "    postman.setNextRequest(null);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "33a56ede-6599-9c3e-3297-31de2f4ffbaa",
                    "name": "Ensure OT Card (setup)",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/accounts/{{order_taker_id}}/cards"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "05604729e41cb88e8571906231770b83"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/accounts/29449/cards"
                },
                "response": {
                    "body": "{\"cards\":[{\"number\":\"E1569063ACF34D5FAB32CFAA62035CB8\",\"expires_at\":\"2017-05-05T00:00:00Z\",\"swipe_count\":0,\"order_taker_id\":29449,\"printed_number\":\"E1569063ACF34D5FAB32CFAA62035CB8\",\"account\":{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"d2d679d6b1ba34357dbb76e08b5a1281\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}}]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:22 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "359"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 359,
                    "responseTime": 55,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 28,
                    "ref": "63f4735b-97ec-46ff-92b6-0f13c9672522"
                },
                "id": "65edf669-7a23-242b-1f3d-28c325dd4683",
                "item": {
                    "_": {
                        "postman_id": "65edf669-7a23-242b-1f3d-28c325dd4683"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"OrderTaker\"]",
                                    "    },",
                                    "    \"username\": { \"type\": \"string\" },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"is_manager\": { \"type\": \"boolean\" },",
                                    "    \"venue_id\": { \"type\": \"integer\" },",
                                    "    \"venue_ids\": { \"type\": \"array\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"username\",",
                                    "      \"session_token\", \"is_manager\",",
                                    "      \"venue_id\", \"venue_ids\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "65edf669-7a23-242b-1f3d-28c325dd4683",
                    "name": "Login (OrderTaker)",
                    "request": {
                        "auth": {
                            "basic": {
                                "password": "bypassword",
                                "username": "authtestordertaker"
                            },
                            "type": "basic"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"order_taker\" }"
                        },
                        "description": {
                            "content": "passing in auth_type param of \"order_taker\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic YXV0aHRlc3RvcmRlcnRha2VyOmJ5cGFzc3dvcmQ="
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "auth": {
                        "basic": {
                            "password": "bypassword",
                            "username": "authtestordertaker"
                        },
                        "type": "basic"
                    },
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"order_taker\" }"
                    },
                    "description": {
                        "content": "passing in auth_type param of \"order_taker\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Authorization",
                            "system": true,
                            "value": "Basic YXV0aHRlc3RvcmRlcnRha2VyOmJ5cGFzc3dvcmQ="
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 30
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"f37ef29a485596380be8dfcd5e83dc3b\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:22 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "164"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 164,
                    "responseTime": 71,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 29,
                    "ref": "e52e98f4-47ce-4108-8b3d-d0f8482c4e00"
                },
                "id": "7ed54e41-ef1c-cb0a-5682-dc9e00221e44",
                "item": {
                    "_": {
                        "postman_id": "7ed54e41-ef1c-cb0a-5682-dc9e00221e44"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"OrderTaker\"]",
                                    "    },",
                                    "    \"username\": { \"type\": \"string\" },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"is_manager\": { \"type\": \"boolean\" },",
                                    "    \"venue_id\": { \"type\": \"integer\" },",
                                    "    \"venue_ids\": { \"type\": \"array\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"username\",",
                                    "      \"session_token\", \"is_manager\",",
                                    "      \"venue_id\", \"venue_ids\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "postman.setEnvironmentVariable(\"order_taker_session_token\", jsonData.session_token)"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "7ed54e41-ef1c-cb0a-5682-dc9e00221e44",
                    "name": "Login (OrderTaker - Access Headers)",
                    "request": {
                        "auth": {
                            "basic": {
                                "password": "bypassword",
                                "username": "authtestordertaker"
                            },
                            "type": "basic"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"order_taker\" }"
                        },
                        "description": {
                            "content": "* All headers the service expects from Access for Kinesis check-in event\n* passing in auth_type param of \"order_taker\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic YXV0aHRlc3RvcmRlcnRha2VyOmJ5cGFzc3dvcmQ="
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-API-VERSION",
                                "value": "2.0.2"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-DEVICE-MODEL",
                                "value": "ZenWidget"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-DEVICE-NAME",
                                "value": "Ziggy"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-ANDROID-VERSION",
                                "value": "5.2.3"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-SERIAL",
                                "value": "1234ABCD"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-DEVICE-TYPE",
                                "value": "POS"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-PRODUCT-TYPE",
                                "value": "Tablet"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-VERSION",
                                "value": "1.2.3"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "auth": {
                        "basic": {
                            "password": "bypassword",
                            "username": "authtestordertaker"
                        },
                        "type": "basic"
                    },
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"order_taker\" }"
                    },
                    "description": {
                        "content": "* All headers the service expects from Access for Kinesis check-in event\n* passing in auth_type param of \"order_taker\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-API-VERSION",
                            "value": "2.0.2"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-DEVICE-MODEL",
                            "value": "ZenWidget"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-DEVICE-NAME",
                            "value": "Ziggy"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-ANDROID-VERSION",
                            "value": "5.2.3"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-SERIAL",
                            "value": "1234ABCD"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-DEVICE-TYPE",
                            "value": "POS"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-PRODUCT-TYPE",
                            "value": "Tablet"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-VERSION",
                            "value": "1.2.3"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Authorization",
                            "system": true,
                            "value": "Basic YXV0aHRlc3RvcmRlcnRha2VyOmJ5cGFzc3dvcmQ="
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 30
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"b98c684cd665311c988448279cbc976c\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:22 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "164"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 164,
                    "responseTime": 61,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 30,
                    "ref": "b6ae7fc8-2467-4f0b-b59b-564fbc92e585"
                },
                "id": "3f95c9dd-05a4-017a-0b78-2a3831a72725",
                "item": {
                    "_": {
                        "postman_id": "3f95c9dd-05a4-017a-0b78-2a3831a72725"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"OrderTaker\"]",
                                    "    },",
                                    "    \"username\": { \"type\": \"string\" },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"is_manager\": { \"type\": \"boolean\" },",
                                    "    \"venue_id\": { \"type\": \"integer\" },",
                                    "    \"venue_ids\": { \"type\": \"array\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"username\",",
                                    "      \"session_token\", \"is_manager\",",
                                    "      \"venue_id\", \"venue_ids\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "3f95c9dd-05a4-017a-0b78-2a3831a72725",
                    "name": "Login (Card)",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "[Prerequisite]\n- Create a Card for an active OrderTaker\n\n[Description]\nAuthenticate via the card number value in the environment",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-CARD-NUMBER",
                                "value": "{{card_number}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "[Prerequisite]\n- Create a Card for an active OrderTaker\n\n[Description]\nAuthenticate via the card number value in the environment",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-CARD-NUMBER",
                            "value": "E1569063ACF34D5FAB32CFAA62035CB8"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"ed0c7a977eabe88d2ce1fa6f7e0a820b\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:22 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "164"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 164,
                    "responseTime": 60,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 31,
                    "ref": "ddf48519-3e61-422d-8cd5-4ae09bcd3af8"
                },
                "id": "265ea1a3-e86b-cb7d-0642-f31d3324b60d",
                "item": {
                    "_": {
                        "postman_id": "265ea1a3-e86b-cb7d-0642-f31d3324b60d"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": { \"type\": \"string\" },",
                                    "    \"username\": { \"type\": \"string\" },",
                                    "    \"is_manager\": { \"type\": \"boolean\" },",
                                    "    \"venue_id\": { \"type\": \"integer\" },",
                                    "    \"venue_ids\": { \"type\": \"array\" }",
                                    "  }",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "265ea1a3-e86b-cb7d-0642-f31d3324b60d",
                    "name": "Manager check",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Used for the manager PIN entry check endpoint",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-MANAGER-PIN",
                                "value": "{{encoded_pos_keycode}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Used for the manager PIN entry check endpoint",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-MANAGER-PIN",
                            "value": "ODY6NTU2Nw=="
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"d2d679d6b1ba34357dbb76e08b5a1281\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:23 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "164"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 164,
                    "responseTime": 53,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 32,
                    "ref": "0b8a98a7-9e0b-42ab-86e3-cc8173eebb62"
                },
                "id": "a164c973-2dd0-c6cc-4042-df0d7743ce27",
                "item": {
                    "_": {
                        "postman_id": "a164c973-2dd0-c6cc-4042-df0d7743ce27"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"expires_at\": { \"type\": \"string\" },",
                                    "    \"refresh_count\": { \"type\": \"integer\" },",
                                    "    \"account\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "a164c973-2dd0-c6cc-4042-df0d7743ce27",
                    "name": "Session Show",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "When sent with a valid token in the header, will return the session.",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{order_taker_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "When sent with a valid token in the header, will return the session.",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "b98c684cd665311c988448279cbc976c"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "{\"token\":\"b98c684cd665311c988448279cbc976c\",\"expires_at\":\"2016-11-01T19:56:23.127035736Z\",\"refresh_count\":1,\"account\":{\"id\":29449,\"type\":\"OrderTaker\",\"session_token\":\"b98c684cd665311c988448279cbc976c\",\"username\":\"authtestordertaker\",\"is_manager\":true,\"venue_ids\":[86],\"venue_id\":86}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:23 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "283"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 283,
                    "responseTime": 63,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code is 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 33,
                    "ref": "3fb0c1e0-d93d-40e4-b363-11dff6068baf"
                },
                "id": "d05635a8-3781-2e31-4e53-665f0c5e208e",
                "item": {
                    "_": {
                        "postman_id": "d05635a8-3781-2e31-4e53-665f0c5e208e"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "d05635a8-3781-2e31-4e53-665f0c5e208e",
                    "name": "Session Delete",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Delete the session represented by the token in the header.",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{order_taker_session_token}}"
                            }
                        ],
                        "method": "DELETE",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Delete the session represented by the token in the header.",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "b98c684cd665311c988448279cbc976c"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "DELETE",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:23 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 0,
                    "responseTime": 58,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 34,
                    "ref": "d149fde8-467c-4f8f-ab69-5f6f9e967b0a"
                },
                "id": "4cb062ed-8e09-98a1-ab81-dfadb34cf0ca",
                "item": {
                    "_": {
                        "postman_id": "4cb062ed-8e09-98a1-ab81-dfadb34cf0ca"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": [\"integer\", \"string\"] },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"ParametricDevice\"]",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"account\": {",
                                    "        \"type\": \"object\",",
                                    "        \"properties\": {",
                                    "            \"id\": { \"type\": [\"integer\", \"string\"] },",
                                    "            \"type\": {",
                                    "                \"type\": \"string\",",
                                    "                \"enum\": [\"ParametricDevice\"]",
                                    "            },",
                                    "            \"venue_id\": { \"type\": [\"null\", \"number\", \"string\"] },",
                                    "            \"venue_ids\": { \"type\": \"array\" }   ",
                                    "        },",
                                    "        \"required\": [\"id\", \"type\", \"venue_id\", \"venue_ids\"]",
                                    "    }",
                                    "  },",
                                    "  \"required\": [\"id\", \"type\", \"session_token\", \"account\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Removing tests until JWT is released",
                                    "",
                                    "// Tests",
                                    "// tests[schemaString] = validated.valid;",
                                    "// tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "// tests[\"X-DEVICE-TOKEN should exist\"] = postman.getResponseHeader(\"X-DEVICE-TOKEN\") !== undefined;",
                                    "",
                                    "// Environment Variables",
                                    "// postman.setEnvironmentVariable(\"session_token\", jsonData.session_token);",
                                    "// postman.setEnvironmentVariable(\"device_jwt\", postman.getResponseHeader(\"X-DEVICE-TOKEN\"))"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "4cb062ed-8e09-98a1-ab81-dfadb34cf0ca",
                    "name": "Login (ParametricDevice)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"parametric_device\" }"
                        },
                        "description": {
                            "content": "passing in auth_type param of \"parametric_device\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{parametric_session}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"parametric_device\" }"
                    },
                    "description": {
                        "content": "passing in auth_type param of \"parametric_device\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic Q00wMDAwMDAwMDA2Mjc5NmFkOjk5OTk3ODBmZGIxZmE4ZDE3YTczMWZkYzgxODY1OTM4"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 36
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":4721,\"type\":\"ParametricDevice\",\"session_token\":\"e6712f531f5dea88bcd4092034f876c3\",\"account\":{\"id\":4721,\"type\":\"ParametricDevice\",\"venue_id\":0,\"venue_ids\":[0],\"parametric_venue_id\":202}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:23 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "191"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 191,
                    "responseTime": 239,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 35,
                    "ref": "03734449-a0d0-4498-a4e9-4ae68b8ceea4"
                },
                "id": "511cf28d-7a25-3481-822b-c35687979436",
                "item": {
                    "_": {
                        "postman_id": "511cf28d-7a25-3481-822b-c35687979436"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"expires_at\": { \"type\": \"string\" },",
                                    "    \"refresh_count\": { \"type\": \"integer\" },",
                                    "    \"account\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [\"expires_at\", \"refresh_count\", \"account\"]",
                                    "  // When JWTs are ready, remove above line and uncomment the one below",
                                    "  // \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                    "};",
                                    "",
                                    "// Removing tests until JWT is released",
                                    "",
                                    "// validated = tv4.validateResult(jsonData, schema);",
                                    "// schemaString = \"Valid Response Schema\";",
                                    "// if(validated.valid === false) {",
                                    "//     schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "// }",
                                    "",
                                    "// // Tests",
                                    "// tests[schemaString] = validated.valid;",
                                    "// tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "511cf28d-7a25-3481-822b-c35687979436",
                    "name": "Session (Parametric Device) (valid JWT)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"parametric_device\" }"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-DEVICE-TOKEN",
                                "value": "{{device_jwt}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"parametric_device\" }"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-DEVICE-TOKEN",
                            "value": "null"
                        },
                        {
                            "key": "Content-Type",
                            "value": "text/plain"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 36
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "{\"error\":\"invalid token\"}",
                    "code": 401,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:23 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "25"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 25,
                    "responseTime": 50,
                    "size": {},
                    "status": "Unauthorized",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 36,
                    "ref": "712eaa50-6078-4df2-8620-bc20a297b9b8"
                },
                "id": "2a8b85cb-0aee-eb13-372b-b726258195d1",
                "item": {
                    "_": {
                        "postman_id": "2a8b85cb-0aee-eb13-372b-b726258195d1"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"Admin\"]",
                                    "    },",
                                    "    \"email\": {",
                                    "        \"type\": \"string\"",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" },",
                                    "    \"super_admin\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"email\",",
                                    "      \"session_token\", \"venue_ids\",",
                                    "      \"super_admin\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "2a8b85cb-0aee-eb13-372b-b726258195d1",
                    "name": "Create Super Admin Session",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"admin\" }"
                        },
                        "description": {
                            "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{super_admin_authorization}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"admin\" }"
                    },
                    "description": {
                        "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic MXN1cGVyYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 24
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":2034,\"type\":\"Admin\",\"session_token\":\"95de763161d585e606daf94b9104780e\",\"email\":\"1superadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":true,\"venue_ids\":[86]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:23 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "184"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 184,
                    "responseTime": 62,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 37,
                    "ref": "37d620a6-de82-40f8-91f6-50882f3aae96"
                },
                "id": "9282605a-c631-a84b-aa5d-4c780504211d",
                "item": {
                    "_": {
                        "postman_id": "9282605a-c631-a84b-aa5d-4c780504211d"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "    \"type\": \"object\",",
                                    "    \"properties\": { ",
                                    "        \"id\": { \"type\": \"integer\" },",
                                    "        \"name\": {",
                                    "            \"type\": \"string\",",
                                    "            \"enum\": [\"Paladin\"]",
                                    "        },",
                                    "        \"role_definition\": {",
                                    "            \"type\": [ \"object\" ]",
                                    "        }",
                                    "    },",
                                    "    \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environments",
                                    "postman.setEnvironmentVariable(\"role_id\", jsonData.id);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "9282605a-c631-a84b-aa5d-4c780504211d",
                    "name": "Role create",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"role\":{\n        \"role_definition\":{\n            \"addon_groups\": {\n                \"enabled\": true\n            },\n            \"allocate\": {\n                \"enabled\": true\n            }\n        },\n        \"name\":\"Paladin\"\n    }\n}"
                        },
                        "description": {
                            "content": "Create a Role",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/venues/{{venue_id}}/roles.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"role\":{\n        \"role_definition\":{\n            \"addon_groups\": {\n                \"enabled\": true\n            },\n            \"allocate\": {\n                \"enabled\": true\n            }\n        },\n        \"name\":\"Paladin\"\n    }\n}"
                    },
                    "description": {
                        "content": "Create a Role",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "95de763161d585e606daf94b9104780e"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 235
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/venues/86/roles.json"
                },
                "response": {
                    "body": "{\"id\":455,\"name\":\"Paladin\",\"organization_id\":82,\"role_definition\":{\"addon_groups\":{\"enabled\":true},\"allocate\":{\"enabled\":true}},\"venue_id\":86}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:23 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "142"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 142,
                    "responseTime": 57,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 38,
                    "ref": "af8d48f8-83b0-4c21-817e-93094a6fcfd2"
                },
                "id": "4d3ee5fd-e120-26b3-2e8d-3e991ab0a134",
                "item": {
                    "_": {
                        "postman_id": "4d3ee5fd-e120-26b3-2e8d-3e991ab0a134"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"name\": { \"type\": \"string\" },",
                                    "    \"role_definition\": { \"type\": [\"string\", \"object\"] }",
                                    "  },",
                                    "  \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "4d3ee5fd-e120-26b3-2e8d-3e991ab0a134",
                    "name": "Role update",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"role\":{\n        \"role_definition\": {\n            \"addon_groups\": {\n                \"enabled\": false\n            },\n            \"allocate\": {\n                \"enabled\": false\n            }\n        },\n        \"name\":\"Fondarkf\"\n    }\n}"
                        },
                        "description": {
                            "content": "Update a Role",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "PUT",
                        "url": "{{auth_host}}/venues/{{venue_id}}/roles/{{role_id}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{\n    \"role\":{\n        \"role_definition\": {\n            \"addon_groups\": {\n                \"enabled\": false\n            },\n            \"allocate\": {\n                \"enabled\": false\n            }\n        },\n        \"name\":\"Fondarkf\"\n    }\n}"
                    },
                    "description": {
                        "content": "Update a Role",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "95de763161d585e606daf94b9104780e"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 239
                        }
                    ],
                    "method": "PUT",
                    "url": "https://auth.bypassmobile.com/venues/86/roles/455"
                },
                "response": {
                    "body": "{\"id\":455,\"name\":\"Fondarkf\",\"organization_id\":82,\"role_definition\":{\"addon_groups\":{\"enabled\":false},\"allocate\":{\"enabled\":false}},\"venue_id\":86}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:23 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "145"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 145,
                    "responseTime": 65,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 39,
                    "ref": "aa23fb3e-df00-403f-80a2-940bcdd6310b"
                },
                "id": "2c4dcb76-78f9-514e-546a-b1e290eb2df7",
                "item": {
                    "_": {
                        "postman_id": "2c4dcb76-78f9-514e-546a-b1e290eb2df7"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"roles\": {",
                                    "      \"type\": \"array\",",
                                    "      \"properties\": {",
                                    "        \"id\": { \"type\": \"integer\" },",
                                    "        \"name\": { \"type\": \"string\" },",
                                    "        \"role_definition\": { \"type\": [\"string\", \"object\"] }",
                                    "      },",
                                    "      \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                    "    }",
                                    "  },",
                                    "  \"required\": [\"roles\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "2c4dcb76-78f9-514e-546a-b1e290eb2df7",
                    "name": "Role index",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Show Roles for a Venue",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/venues/{{venue_id}}/roles"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Show Roles for a Venue",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "95de763161d585e606daf94b9104780e"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/venues/86/roles"
                },
                "response": {
                    "body": "{\"roles\":[{\"id\":1,\"name\":\"Suites Manager\",\"organization_id\":0,\"role_definition\":{\"allocate\":{\"enabled\":true},\"analytics\":{\"enabled\":true},\"dashboard\":{\"enabled\":true},\"event_templates\":{\"enabled\":true},\"events\":{\"enabled\":true},\"inventory\":{\"enabled\":true},\"inventory_audits\":{\"enabled\":true},\"inventory_categories\":{\"enabled\":true},\"inventory_index\":{\"enabled\":true},\"inventory_movements\":{\"enabled\":true},\"inventory_transfers\":{\"enabled\":true},\"location_control\":{\"enabled\":true},\"menus\":{\"enabled\":true},\"modifiers2\":{\"enabled\":true},\"order-takers\":{\"enabled\":true},\"purchase_orders\":{\"enabled\":true},\"recipes\":{\"enabled\":true},\"report_templates\":{\"enabled\":true},\"reports\":{\"enabled\":true},\"sections\":{\"enabled\":true},\"standsheets\":{\"enabled\":true},\"stock_items\":{\"enabled\":true},\"suite_accounts_v2\":{\"enabled\":true},\"suite_bookings\":{\"enabled\":true},\"suites\":{\"enabled\":true},\"suites_setup\":{\"enabled\":true},\"suppliers\":{\"enabled\":true},\"tips\":{\"enabled\":true},\"warehouses\":{\"enabled\":true}},\"venue_id\":86},{\"id\":2,\"name\":\"Inventory Manager\",\"organization_id\":0,\"role_definition\":{\"inventory\":{\"enabled\":true},\"locations\":{\"enabled\":true}},\"venue_id\":86},{\"id\":4,\"name\":\"Test 1\",\"organization_id\":0,\"role_definition\":{\"admins\":{\"enabled\":true},\"alerts\":{\"enabled\":true},\"bucks\":{\"enabled\":true},\"dashboard\":{\"enabled\":true},\"events\":{\"enabled\":true},\"inventory\":{\"enabled\":true},\"location_control\":{\"enabled\":true},\"order-takers\":{\"enabled\":true},\"reports\":{\"enabled\":true},\"suites\":{\"enabled\":true},\"terminals\":{\"enabled\":true},\"venue-settings\":{\"enabled\":true}},\"venue_id\":86},{\"id\":5,\"name\":\"3\",\"organization_id\":0,\"role_definition\":{\"categories\":{\"enabled\":true},\"events\":{\"enabled\":false},\"location_control\":{\"enabled\":true},\"modifiers\":{\"enabled\":true},\"option_types\":{\"enabled\":true},\"orders\":{\"enabled\":true},\"stock_items\":{\"enabled\":true},\"suite_accounts\":{\"enabled\":true},\"suites\":{\"enabled\":true}},\"venue_id\":86},{\"id\":7,\"name\":\"five star manager\",\"organization_id\":0,\"role_definition\":{\"categories\":{\"enabled\":true},\"dashboard\":{\"enabled\":true},\"events\":{\"enabled\":true},\"events_index\":{\"enabled\":true},\"import\":{\"enabled\":true},\"inventory\":{\"enabled\":true},\"inventory_index\":{\"enabled\":true},\"location_control\":{\"enabled\":true},\"locations\":{\"enabled\":true},\"orders\":{\"enabled\":true},\"pre_orders\":{\"enabled\":true},\"stock_items\":{\"enabled\":true},\"suites\":{\"enabled\":true}},\"venue_id\":86},{\"id\":8,\"name\":\"A Type of Manager\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true},\"location_control\":{\"enabled\":true}},\"venue_id\":86},{\"id\":9,\"name\":\"Queen of Some Things\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true},\"events\":{\"enabled\":true},\"order-takers\":{\"enabled\":true},\"reports\":{\"enabled\":true},\"terminals\":{\"enabled\":true}},\"venue_id\":86},{\"id\":10,\"name\":\"New Role\",\"organization_id\":0,\"role_definition\":null,\"venue_id\":86},{\"id\":11,\"name\":\"Role\",\"organization_id\":0,\"role_definition\":null,\"venue_id\":86},{\"id\":12,\"name\":\"King of Some Things\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true}},\"venue_id\":86},{\"id\":14,\"name\":\"Server Manager\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true}},\"venue_id\":86},{\"id\":22,\"name\":\"Testing OT\",\"organization_id\":0,\"role_definition\":{\"cash_drops\":{\"enabled\":true},\"cashroom\":{\"enabled\":true},\"dashboard\":{\"enabled\":true},\"event_templates\":{\"enabled\":true},\"events\":{\"enabled\":true},\"events_index\":{\"enabled\":true},\"orders\":{\"enabled\":true},\"pre_orders\":{\"enabled\":true},\"suite_accounts\":{\"enabled\":true},\"suites\":{\"enabled\":true},\"suites_setup\":{\"enabled\":true},\"terminals\":{\"enabled\":true},\"tips\":{\"enabled\":true}},\"venue_id\":86},{\"id\":23,\"name\":\"Cashroom\",\"organization_id\":0,\"role_definition\":{\"cashroom\":{\"enabled\":true},\"dashboard\":{\"enabled\":true}},\"venue_id\":86},{\"id\":70,\"name\":\"Test Role\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true}},\"venue_id\":86},{\"id\":113,\"name\":\"test3\",\"organization_id\":0,\"role_definition\":{\"addon_groups\":{\"enabled\":true},\"categories\":{\"enabled\":true},\"dashboard\":{\"enabled\":true},\"index\":{\"enabled\":true},\"items\":{\"enabled\":true},\"location-control\":{\"enabled\":true},\"locations\":{\"enabled\":true},\"main\":{\"enabled\":true},\"menus\":{\"enabled\":true},\"modifier_categories\":{\"enabled\":true},\"modifiers\":{\"enabled\":true},\"option_types\":{\"enabled\":true},\"pre_orders\":{\"enabled\":true},\"sections\":{\"enabled\":true},\"suite_accounts\":{\"enabled\":true},\"suites\":{\"enabled\":true},\"suites_setup\":{\"enabled\":true},\"tables\":{\"enabled\":true},\"vendors\":{\"enabled\":true}},\"venue_id\":86},{\"id\":114,\"name\":\"Smashburger\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true},\"devices\":{\"enabled\":true},\"discount_configurations\":{\"enabled\":true},\"employees\":{\"enabled\":true},\"gratuity_configurations\":{\"enabled\":true},\"locations\":{\"enabled\":true},\"reports\":{\"enabled\":true},\"surcharge_configurations\":{\"enabled\":true},\"tax_configurations\":{\"enabled\":true},\"venue-settings\":{\"enabled\":true},\"venue_defaults\":{\"enabled\":true}},\"venue_id\":86},{\"id\":145,\"name\":\"CIN User Test\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":false},\"locations\":{\"enabled\":true}},\"venue_id\":86},{\"id\":148,\"name\":\"The First of the Mohicans\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true}},\"venue_id\":86},{\"id\":158,\"name\":\"Jedi\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true}},\"venue_id\":86},{\"id\":159,\"name\":\"four star manager\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true}},\"venue_id\":86},{\"id\":160,\"name\":\"teset dfdfdf\",\"organization_id\":0,\"role_definition\":{\"dashboard\":{\"enabled\":true}},\"venue_id\":86},{\"id\":387,\"name\":\"Employees only\",\"organization_id\":82,\"role_definition\":{\"admins\":{\"enabled\":false},\"dashboard\":{\"enabled\":true},\"employees\":{\"enabled\":true},\"roles\":{\"enabled\":false},\"shifts\":{\"enabled\":false}},\"venue_id\":86},{\"id\":455,\"name\":\"Fondarkf\",\"organization_id\":82,\"role_definition\":{\"addon_groups\":{\"enabled\":false},\"allocate\":{\"enabled\":false}},\"venue_id\":86}]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:24 GMT"
                        },
                        {
                            "key": "transfer-encoding",
                            "value": "chunked"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 6013,
                    "responseTime": 54,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 40,
                    "ref": "823f2043-0093-409d-8426-79ad1ebea972"
                },
                "id": "180be6b2-3076-2925-6878-72d1478841b5",
                "item": {
                    "_": {
                        "postman_id": "180be6b2-3076-2925-6878-72d1478841b5"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "      \"properties\": {",
                                    "        \"super_admin\": { \"type\": \"boolean\" },",
                                    "        \"id\": { \"type\": [\"null\", \"string\"] },",
                                    "        \"name\": { \"type\": \"string\" },",
                                    "        \"role_definition\": { \"type\": \"object\" }",
                                    "      },",
                                    "      \"required\": [ \"super_admin\", \"id\", \"name\", \"role_definition\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "180be6b2-3076-2925-6878-72d1478841b5",
                    "name": "Role mine",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "hits the 'mine' endpoint",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/venues/{{venue_id}}/roles/mine"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "hits the 'mine' endpoint",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "95de763161d585e606daf94b9104780e"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/venues/86/roles/mine"
                },
                "response": {
                    "body": "{\"id\":null,\"super_admin\":true,\"name\":\"Super Admin\",\"role_definition\":{}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:24 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "72"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 72,
                    "responseTime": 56,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 41,
                    "ref": "e619730e-90af-43e1-b0a1-e15c26b6350e"
                },
                "id": "bedfab89-d576-3f0d-de57-0a120164a820",
                "item": {
                    "_": {
                        "postman_id": "bedfab89-d576-3f0d-de57-0a120164a820"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"name\": { \"type\": \"string\" },",
                                    "    \"role_definition\": { \"type\": [\"string\", \"object\"] }",
                                    "  },",
                                    "  \"required\": [ \"id\", \"name\", \"role_definition\" ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "  schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "bedfab89-d576-3f0d-de57-0a120164a820",
                    "name": "Role show",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Get a single Role",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/venues/{{venue_id}}/roles/{{role_id}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Get a single Role",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "95de763161d585e606daf94b9104780e"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/venues/86/roles/455"
                },
                "response": {
                    "body": "{\"id\":455,\"name\":\"Fondarkf\",\"organization_id\":82,\"role_definition\":{\"addon_groups\":{\"enabled\":false},\"allocate\":{\"enabled\":false}},\"venue_id\":86}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:24 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "145"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 145,
                    "responseTime": 55,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 42,
                    "ref": "7770b37b-9898-49a6-b6f9-06d9257eb2d8"
                },
                "id": "c0bc6e75-2082-3605-a218-5e88e2c4a607",
                "item": {
                    "_": {
                        "postman_id": "c0bc6e75-2082-3605-a218-5e88e2c4a607"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "c0bc6e75-2082-3605-a218-5e88e2c4a607",
                    "name": "Role delete",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Delete a Role",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "DELETE",
                        "url": "{{auth_host}}/venues/{{venue_id}}/roles/{{role_id}}"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Delete a Role",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "95de763161d585e606daf94b9104780e"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "DELETE",
                    "url": "https://auth.bypassmobile.com/venues/86/roles/455"
                },
                "response": {
                    "body": "",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:24 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 0,
                    "responseTime": 65,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 43,
                    "ref": "160edae3-63b6-4753-b908-a5e7fe55c76a"
                },
                "id": "fe941dd7-e26c-da9d-1bc0-a8a59c88a0d5",
                "item": {
                    "_": {
                        "postman_id": "fe941dd7-e26c-da9d-1bc0-a8a59c88a0d5"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"Admin\"]",
                                    "    },",
                                    "    \"email\": {",
                                    "        \"type\": \"string\"",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" },",
                                    "    \"super_admin\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"email\",",
                                    "      \"session_token\", \"venue_ids\",",
                                    "      \"super_admin\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"admin_session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "fe941dd7-e26c-da9d-1bc0-a8a59c88a0d5",
                    "name": "Login as Admin (setup)",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"admin\" }"
                        },
                        "description": {
                            "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{admin_authorization}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"admin\" }"
                    },
                    "description": {
                        "content": "Authenticate as an OrderTaker, passing in auth_type param of \"admin\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic MWJwYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 24
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":2035,\"type\":\"Admin\",\"session_token\":\"8f8bf37d76184fe5f7694f54c54a1bd7\",\"email\":\"1bpadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":false,\"venue_ids\":[86]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:24 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "182"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 182,
                    "responseTime": 60,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    },
                    {
                        "assertion": "straight to login"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 44,
                    "ref": "1e07c118-4b35-4409-b7a6-686dfceccbd7"
                },
                "id": "810f9013-3dab-691d-296d-b7c1c6531c37",
                "item": {
                    "_": {
                        "postman_id": "810f9013-3dab-691d-296d-b7c1c6531c37"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "if(responseCode.code === 200) {",
                                    "    tests[\"Status code should be 200\"] = true;",
                                    "    if(jsonData.users.length === 0) {",
                                    "        postman.setNextRequest(\"Create User (setup)\");",
                                    "        tests[\"created user\"] = true;",
                                    "    } else {",
                                    "        postman.setNextRequest(\"Login (User with email)\");",
                                    "        tests[\"straight to login\"] = true;",
                                    "    }",
                                    "} else {",
                                    "    tests[\"Status code should be 200 but was\" + responseCode.code] = responseCode.code === 200;",
                                    "    postman.setNextRequest(null);",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "810f9013-3dab-691d-296d-b7c1c6531c37",
                    "name": "Ensure User Exsits (setup)",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-BYPASS-ADMIN-VENUE",
                                "value": "{{venue_id}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{admin_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{api_host}}/api/admin/venue/users.json?filter%5Bemail_eq%5D=yodawg%40iheardyoulike.com"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-BYPASS-ADMIN-VENUE",
                            "value": "86"
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "8f8bf37d76184fe5f7694f54c54a1bd7"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "api.bypassmobile.com"
                        },
                        {
                            "key": "cookie",
                            "value": "_session_id=8ed4306e35b063404e86ee30e5d5664d"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://api.bypassmobile.com/api/admin/venue/users.json?filter%5Bemail_eq%5D=yodawg%40iheardyoulike.com"
                },
                "response": {
                    "body": "{\"users\":[{\"email\":\"yodawg@iheardyoulike.com\",\"phone_number\":\"5128675709\"}],\"meta\":{\"pages\":1,\"page\":1,\"per_page\":20,\"count\":1}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Cache-Control",
                            "value": "must-revalidate, private, max-age=0"
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json; charset=utf-8"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:24 GMT"
                        },
                        {
                            "key": "ETag",
                            "value": "\"838ce515af044d74b76567765aaf468d\""
                        },
                        {
                            "key": "Set-Cookie",
                            "value": "_session_id=8ed4306e35b063404e86ee30e5d5664d; path=/; expires=Tue, 01-Nov-2016 20:56:24 GMT; secure; HttpOnly"
                        },
                        {
                            "key": "X-Rack-Cache",
                            "value": "miss"
                        },
                        {
                            "key": "X-Request-Id",
                            "value": "d29ad0b50de9b5c8e2e4a2e039fb86e6"
                        },
                        {
                            "key": "X-Runtime",
                            "value": "0.226374"
                        },
                        {
                            "key": "X-UA-Compatible",
                            "value": "IE=Edge,chrome=1"
                        },
                        {
                            "key": "Content-Length",
                            "value": "128"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 128,
                    "responseTime": 278,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 46,
                    "ref": "6ed346fb-2821-4795-8707-655805eb1a24"
                },
                "id": "27536178-196d-304c-5349-5e08619def12",
                "item": {
                    "_": {
                        "postman_id": "27536178-196d-304c-5349-5e08619def12"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"User\"]",
                                    "    },",
                                    "    \"phone_number\": { \"type\": \"string\" },",
                                    "    \"email\": { \"type\": \"string\" },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    }",
                                    "  },",
                                    "  \"required\": [\"id\", \"type\", \"phone_number\", \"email\", \"session_token\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"user_session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "27536178-196d-304c-5349-5e08619def12",
                    "name": "Login (User with email)",
                    "request": {
                        "auth": {
                            "basic": {
                                "password": "bypassword",
                                "username": "yodawg@iheardyoulike.com"
                            },
                            "type": "basic"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"user\" }"
                        },
                        "description": {
                            "content": "passing in auth_type param of \"user\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic eW9kYXdnQGloZWFyZHlvdWxpa2UuY29tOmJ5cGFzc3dvcmQ="
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "auth": {
                        "basic": {
                            "password": "bypassword",
                            "username": "yodawg@iheardyoulike.com"
                        },
                        "type": "basic"
                    },
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"user\" }"
                    },
                    "description": {
                        "content": "passing in auth_type param of \"user\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Authorization",
                            "system": true,
                            "value": "Basic eW9kYXdnQGloZWFyZHlvdWxpa2UuY29tOmJ5cGFzc3dvcmQ="
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 23
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":92007,\"type\":\"User\",\"session_token\":\"f5c7dab42ad610a31a4b635d87404d3f\",\"phone_number\":\"5128675709\",\"email\":\"yodawg@iheardyoulike.com\"}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:24 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "140"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 140,
                    "responseTime": 59,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 47,
                    "ref": "b8f63db1-90f2-4121-9a1c-e7e7f4fba82f"
                },
                "id": "ef1e525b-9304-013b-d4b6-c90c85708eea",
                "item": {
                    "_": {
                        "postman_id": "ef1e525b-9304-013b-d4b6-c90c85708eea"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"User\"]",
                                    "    },",
                                    "    \"username\": { \"type\": \"string\" },",
                                    "    \"is_manager\": { \"type\": \"boolean\" },",
                                    "    \"venue_id\": { \"type\": \"integer\" },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" }",
                                    "  }",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"user_session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "ef1e525b-9304-013b-d4b6-c90c85708eea",
                    "name": "Login (User with phone number)",
                    "request": {
                        "auth": {
                            "basic": {
                                "password": "bypassword",
                                "username": "5128675709"
                            },
                            "type": "basic"
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"user\" }"
                        },
                        "description": {
                            "content": "passing in auth_type param of \"user\"",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic NTEyODY3NTcwOTpieXBhc3N3b3Jk"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "auth": {
                        "basic": {
                            "password": "bypassword",
                            "username": "5128675709"
                        },
                        "type": "basic"
                    },
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"user\" }"
                    },
                    "description": {
                        "content": "passing in auth_type param of \"user\"",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Authorization",
                            "system": true,
                            "value": "Basic NTEyODY3NTcwOTpieXBhc3N3b3Jk"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 23
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":92007,\"type\":\"User\",\"session_token\":\"80f33e486ea3888da65678a9a629362c\",\"phone_number\":\"5128675709\",\"email\":\"yodawg@iheardyoulike.com\"}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:24 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "140"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 140,
                    "responseTime": 58,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 48,
                    "ref": "6cc3a8cb-5627-4b37-8afa-2def88a0a508"
                },
                "id": "01ebed93-12af-f4b4-1d06-788b0832a7f0",
                "item": {
                    "_": {
                        "postman_id": "01ebed93-12af-f4b4-1d06-788b0832a7f0"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"expires_at\": { \"type\": \"string\" },",
                                    "    \"refresh_count\": { \"type\": \"integer\" },",
                                    "    \"account\": { \"type\": \"object\" }",
                                    "  },",
                                    "  \"required\": [\"token\", \"expires_at\", \"refresh_count\", \"account\"]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "01ebed93-12af-f4b4-1d06-788b0832a7f0",
                    "name": "Session Show",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "When sent with a valid token in the header, will return the session.",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{user_session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "When sent with a valid token in the header, will return the session.",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "80f33e486ea3888da65678a9a629362c"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "{\"token\":\"80f33e486ea3888da65678a9a629362c\",\"expires_at\":\"2016-11-01T19:56:25.047175317Z\",\"refresh_count\":1,\"account\":{\"id\":92007,\"type\":\"User\",\"session_token\":\"80f33e486ea3888da65678a9a629362c\",\"phone_number\":\"5128675709\",\"email\":\"yodawg@iheardyoulike.com\"}}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:25 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "259"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 259,
                    "responseTime": 59,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 49,
                    "ref": "d53041d6-d470-444c-b978-2b0099ce73d2"
                },
                "id": "474a351e-b36b-8390-1f48-27c11a35ca94",
                "item": {
                    "_": {
                        "postman_id": "474a351e-b36b-8390-1f48-27c11a35ca94"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "474a351e-b36b-8390-1f48-27c11a35ca94",
                    "name": "Session Delete",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "Delete the session represented by the token in the header.",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{user_session_token}}"
                            }
                        ],
                        "method": "DELETE",
                        "url": "{{auth_host}}/session.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "Delete the session represented by the token in the header.",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "80f33e486ea3888da65678a9a629362c"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": ""
                        }
                    ],
                    "method": "DELETE",
                    "url": "https://auth.bypassmobile.com/session.json"
                },
                "response": {
                    "body": "",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:25 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "0"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 0,
                    "responseTime": 57,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Valid Response Schema"
                    },
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 50,
                    "ref": "586560cc-ee56-4632-bc6f-e1ae9a49cc8b"
                },
                "id": "50c022ee-de60-2973-1e93-a7c4af9de509",
                "item": {
                    "_": {
                        "postman_id": "50c022ee-de60-2973-1e93-a7c4af9de509"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "try {",
                                    "    var jsonData = JSON.parse(responseBody);",
                                    "} catch(e) {",
                                    "    jsonData = {}",
                                    "}",
                                    "var schema = {",
                                    "  \"type\": \"object\",",
                                    "  \"properties\": {",
                                    "    \"id\": { \"type\": \"integer\" },",
                                    "    \"type\": {",
                                    "        \"type\": \"string\",",
                                    "        \"enum\": [\"Admin\"]",
                                    "    },",
                                    "    \"email\": {",
                                    "        \"type\": \"string\"",
                                    "    },",
                                    "    \"session_token\": {",
                                    "        \"type\": \"string\",",
                                    "        \"minLength\": 32",
                                    "    },",
                                    "    \"venue_ids\": { \"type\": \"array\" },",
                                    "    \"super_admin\": { \"type\": \"boolean\" }",
                                    "  },",
                                    "  \"required\": [",
                                    "      \"id\", \"type\", \"email\",",
                                    "      \"session_token\", \"venue_ids\",",
                                    "      \"super_admin\"",
                                    "  ]",
                                    "};",
                                    "",
                                    "validated = tv4.validateResult(jsonData, schema);",
                                    "schemaString = \"Valid Response Schema\";",
                                    "if(validated.valid === false) {",
                                    "    schemaString = \"Schema Validation Failed: \" + validated.error;",
                                    "}",
                                    "",
                                    "// Tests",
                                    "tests[schemaString] = validated.valid;",
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;",
                                    "",
                                    "// Environment Variables",
                                    "postman.setEnvironmentVariable(\"session_token\", jsonData.session_token);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "50c022ee-de60-2973-1e93-a7c4af9de509",
                    "name": "Create Admin Session  POS Services style",
                    "request": {
                        "body": {
                            "mode": "raw",
                            "raw": "{ \"auth_type\": \"admin\" }"
                        },
                        "description": {
                            "content": "POS Services doesn't send \"Basic\" in front of its authorization header",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Authorization",
                                "value": "Basic {{admin_authorization}}"
                            },
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "method": "POST",
                        "url": "{{auth_host}}/auth.json"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "mode": "raw",
                        "raw": "{ \"auth_type\": \"admin\" }"
                    },
                    "description": {
                        "content": "POS Services doesn't send \"Basic\" in front of its authorization header",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Authorization",
                            "value": "Basic MWJwYWRtaW5AYnlwYXNzbW9iaWxlLmNvbTpwd0J5cGFzczE1IQ=="
                        },
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        },
                        {
                            "key": "content-length",
                            "value": 24
                        }
                    ],
                    "method": "POST",
                    "url": "https://auth.bypassmobile.com/auth.json"
                },
                "response": {
                    "body": "{\"id\":2035,\"type\":\"Admin\",\"session_token\":\"f4b9233fad92de09c39a9511069224cb\",\"email\":\"1bpadmin@bypassmobile.com\",\"organization_id\":0,\"role_id\":0,\"super_admin\":false,\"venue_ids\":[86]}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:25 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "182"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 182,
                    "responseTime": 61,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            },
            {
                "assertions": [
                    {
                        "assertion": "Status code should be 200"
                    }
                ],
                "cursor": {
                    "cycles": 1,
                    "iteration": 0,
                    "length": 52,
                    "position": 51,
                    "ref": "69002792-18e7-4cb9-8f57-ec05eb937656"
                },
                "id": "2a518d21-b5d2-b30f-3c77-b6650e08699e",
                "item": {
                    "_": {
                        "postman_id": "2a518d21-b5d2-b30f-3c77-b6650e08699e"
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "tests[\"Status code should be 200\"] = responseCode.code === 200;"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "id": "2a518d21-b5d2-b30f-3c77-b6650e08699e",
                    "name": "Status",
                    "request": {
                        "body": {
                            "formdata": [],
                            "mode": "formdata"
                        },
                        "description": {
                            "content": "",
                            "type": "text/plain"
                        },
                        "header": [
                            {
                                "description": {
                                    "content": "",
                                    "type": "text/plain"
                                },
                                "key": "X-SESSION-TOKEN",
                                "value": "{{session_token}}"
                            }
                        ],
                        "method": "GET",
                        "url": "{{auth_host}}/status"
                    },
                    "response": []
                },
                "request": {
                    "body": {
                        "formdata": [],
                        "mode": "formdata"
                    },
                    "description": {
                        "content": "",
                        "type": "text/plain"
                    },
                    "header": [
                        {
                            "description": {
                                "content": "",
                                "type": "text/plain"
                            },
                            "key": "X-SESSION-TOKEN",
                            "value": "f4b9233fad92de09c39a9511069224cb"
                        },
                        {
                            "key": "User-Agent",
                            "value": "PostmanRuntime/3.0.2"
                        },
                        {
                            "key": "Accept",
                            "value": "*/*"
                        },
                        {
                            "key": "Host",
                            "value": "auth.bypassmobile.com"
                        },
                        {
                            "key": "accept-encoding",
                            "value": "gzip, deflate"
                        }
                    ],
                    "method": "GET",
                    "url": "https://auth.bypassmobile.com/status"
                },
                "response": {
                    "body": "{\"environment\":\"production\"}",
                    "code": 200,
                    "cookie": [],
                    "dataURI": {},
                    "describe": {},
                    "header": [
                        {
                            "key": "Access-Control-Allow-Headers",
                            "value": "Accept, Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, X-Session-Token, X-Bypass-Admin-Venue, X-Bypass-Organization, X-Bypass-Admin-Organization"
                        },
                        {
                            "key": "Access-Control-Allow-Methods",
                            "value": "POST, GET, OPTIONS, PUT, PATCH, DELETE"
                        },
                        {
                            "key": "Access-Control-Allow-Origin",
                            "value": ""
                        },
                        {
                            "key": "Content-Type",
                            "value": "application/json"
                        },
                        {
                            "key": "Date",
                            "value": "Tue, 01 Nov 2016 19:56:25 GMT"
                        },
                        {
                            "key": "Content-Length",
                            "value": "28"
                        },
                        {
                            "key": "Connection",
                            "value": "keep-alive"
                        }
                    ],
                    "json": {},
                    "meta": {},
                    "mime": {},
                    "reason": {},
                    "responseSize": 28,
                    "responseTime": 50,
                    "size": {},
                    "status": "OK",
                    "text": {},
                    "toJSON": {},
                    "toObjectResolved": {},
                    "update": {}
                }
            }
        ],
        "failures": [],
        "stats": {
            "assertions": {
                "failed": 0,
                "pending": 0,
                "total": 78
            },
            "items": {
                "failed": 0,
                "pending": 0,
                "total": 47
            },
            "iterations": {
                "failed": 0,
                "pending": 0,
                "total": 1
            },
            "prerequestScripts": {
                "failed": 0,
                "pending": 0,
                "total": 0
            },
            "prerequests": {
                "failed": 0,
                "pending": 0,
                "total": 47
            },
            "requests": {
                "failed": 0,
                "pending": 0,
                "total": 47
            },
            "scripts": {
                "failed": 0,
                "pending": 0,
                "total": 47
            },
            "testScripts": {
                "failed": 0,
                "pending": 0,
                "total": 47
            },
            "tests": {
                "failed": 0,
                "pending": 0,
                "total": 47
            }
        },
        "timings": {
            "completed": 1478030185434,
            "responseAverage": 82.1276595744681,
            "started": 1478030178285
        },
        "transfers": {
            "responseTotal": 15610
        }
    }
}]
